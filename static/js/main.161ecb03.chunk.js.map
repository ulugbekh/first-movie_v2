{"version":3,"sources":["images/icon/search1.png","images/icon/Film-icon.png","images/icon/imdb.png","containers/header-containers/index.js","containers/header-containers/header-containers.js","containers/footer-container/index.js","containers/footer-container/footer.js","components/highscore-card/highscorecard.js","page/Highscore.js","images/icon/play.webp","components/movia-card/moviacard.js","components/movia-card/index.js","components/big-carousel/index.js","components/big-carousel/bigCarousel.js","page/Home.js","page/Movies.js","components/actors-card/index.js","components/film-info-card/index.js","components/actors-card/actors.js","page/SingleMovie.js","page/TvShovs.js","page/SingleShov.js","page/movielatest.js","page/Movieget.js","page/PersonMovie.js","page/SearchResults.js","App.js","index.js"],"names":["Header","history","useHistory","useState","elementClass","setElementClass","isFetched","data","error","movieList","SetMovieList","linkClick","setLinkClick","searchValue","setSearchValue","useEffect","length","axios","get","params","api_key","then","response","catch","inputRef","useRef","window","addEventListener","e","key","className","onClick","to","onSubmit","push","ref","onChange","target","value","type","placeholder","results","splice","map","item","index","id","src","poster_path","alt","title","release_date","filmIcom","filmIcom1","href","current","focus","viewBox","fill","class","width","height","fill-rule","clip-rule","d","Footer","stroke","stroke-width","x1","y1","x2","y2","gradientUnits","stop-color","offset","enable-background","highscorecard","imglink","relisedate","rating","Highscore","setMovieList","movie","vote_average","backdrop_path","Movicard","page","play","MovieCard","BigCaro","img","Home","tvList","setTvList","OnlineTv","setOnlineTv","nowplaying","setNowPlaying","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","original_name","first_air_date","Movies","Actors","images","name","SingleMovie","match","movieInfo","setMovieInfo","actorInfo","setActorInfo","simleFilm","setSimleFilm","console","log","Helmet","charSet","rel","overview","cast","crew","job","profile_path","TvShovs","setSimleTv","SingleSHov","simleTv","production_companies","last_air_date","MovieLatest","movieLetset","setMovieLetset","Movieget","PersonMovie","SearchResults","searchQuery","App","exact","path","component","SingleShov","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qXAAe,I,4CCAA,MAA0B,sCCA1B,MAA0B,iCCE1BA,ECWU,WACrB,IAAIC,EAAUC,cADa,EAEaC,oBAAS,GAFtB,mBAEpBC,EAFoB,KAENC,EAFM,OAGWF,oBAAS,GAHpB,gCAISA,mBAAS,CACzCG,WAAU,EACVC,KAAK,GACLC,MAAM,QAPiB,mBAInBC,EAJmB,KAIRC,EAJQ,OAYOP,mBAAS,IAZhB,mBAYpBQ,EAZoB,KAYTC,EAZS,OAcWT,mBAAS,IAdpB,mBAcpBU,EAdoB,KAcPC,EAdO,KAwC3BC,qBAAU,WACFF,EAAYG,OAAS,GAxBzBC,IAAMC,IAAN,0DAA6DL,GAAe,CACxEM,OAAQ,CACJC,QAAS,sCAKZC,MAAK,SAAUC,GACZZ,EAAa,CACTJ,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGde,OAAM,SAAUf,GACbE,EAAa,CACTJ,WAAW,EACXC,KAAM,GACNC,MAAOA,SAYpB,CAACK,IAEJ,IAAMW,EAAWC,mBAKjBC,OAAOC,iBAAiB,YAAY,SAACC,GACpB,SAATA,EAAEC,KACFxB,GAAgB,MAOxB,OACI,sBAAKyB,UAAU,SAAf,UACI,qBAAKC,QAAS,kBAAM1B,GAAiBD,IAAe0B,UAAS,sBAAiB1B,EAAe,QAAU,OAEvG,sBAAK0B,UAAU,eAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAME,GAAG,IAAID,QAAS,kBAAMnB,EAAa,MAAMkB,UAAS,yBAAiC,KAAbnB,EAAmB,QAAU,IAAzG,SACI,qBAAImB,UAAU,UAAd,UACI,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,cAAhB,sBAKZ,sBAAKA,UAAU,gBAAf,UACI,cAAC,IAAD,CAAME,GAAG,UAAUD,QAAS,kBAAMnB,EAAa,WAAWkB,UAAS,sBAA8B,UAAbnB,EAAwB,QAAU,IAAtH,oBACA,cAAC,IAAD,CAAMqB,GAAG,YAAYD,QAAS,kBAAMnB,EAAa,YAAYkB,UAAS,sBAA8B,WAAbnB,EAAyB,QAAU,IAA1H,sBACA,cAAC,IAAD,CAAMqB,GAAG,cAAcD,QAAS,kBAAMnB,EAAa,eAAekB,UAAS,sBAA8B,cAAbnB,EAA4B,QAAU,IAAlI,wBACA,cAAC,IAAD,CAAMqB,GAAG,aAAaD,QAAS,kBAAMnB,EAAa,cAAckB,UAAS,sBAA8B,aAAbnB,EAA2B,QAAU,IAA/H,0BAEJ,qBAAKmB,UAAU,eAAf,SACI,gCAEI,sBAAKA,UAAU,YAAf,UACI,sBAAMG,SAlCd,kBAAMhC,EAAQiC,KAAR,kBAAwBrB,KAkCtB,SACA,uBAAOsB,IAAKX,EAAUY,SAAU,SAACR,GAAD,OAAOd,EAAec,EAAES,OAAOC,QAAQA,MAAOzB,EAAa0B,KAAK,SAASC,YAAY,SAASV,UAAS,gBAAW1B,EAAe,QAAU,SAE3K,qBAAK0B,UAAS,wBAAmB1B,EAAe,QAAU,KAA1D,SAEQK,EAAUH,UAEN,qBAAKwB,UAAU,MAAf,SAEQrB,EAAUF,KAAKkC,QAAQzB,OAAS,EAC5B,gCAEQP,EAAUF,KAAKkC,QAAQC,OAAO,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACpC,eAAC,IAAD,CAAMb,GAAE,iBAAYY,EAAKE,IAAMhB,UAAU,cAAzC,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,aAAf,SACA,qBAAKA,UAAU,aAAaiB,IAAG,6CAAwCH,EAAKI,aAAeC,IAAI,OAE/F,sBAAKnB,UAAU,aAAf,UACI,oBAAIA,UAAU,YAAd,SAAuCc,EAAKM,OAAbL,GAC/B,mBAAGf,UAAU,YAAb,SAA0Bc,EAAKO,qBAGvC,sBAAKrB,UAAU,eAAf,UACI,qBAAKiB,IAAKK,EAAUH,IAAI,GAAGnB,UAAU,eACrC,qBAAKiB,IAAKM,EAAWJ,IAAI,GAAGnB,UAAU,wBAKtD,cAAC,IAAD,CAAMA,UAAU,aAAaE,GAAE,kBAAanB,GAA5C,4BAGJ,2DAKZ,kCAKhB,mBAAGyC,KAAK,qBAAqBvB,QAAS,kBAvFtDP,EAAS+B,QAAQC,aACjBnD,GAAiBD,IAsF2D0B,UAAU,SAAtE,SACI,qBAAKA,UAAU,aAAa2B,QAAQ,YAAYC,KAAK,OAAOC,MAAM,GAAGC,MAAM,KAAKC,OAAO,KAAvF,SAA4F,sBAAMC,YAAU,UAAUC,YAAU,UAAUC,EAAE,0iBAA0iBN,KAAK,0BCvJxsBO,G,MCEA,WACX,OACI,qBAAKnC,UAAU,SAAf,SACI,sBAAKA,UAAU,yBAAf,UACA,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAMA,UAAU,YAAYwB,KAAK,GAAjC,SACI,sBAAKG,QAAQ,aAAaC,KAAK,OAAOE,MAAM,MAAMC,OAAO,KAAzD,UAA8D,sBAAMG,EAAE,0zBAA0zBN,KAAK,QAAQQ,OAAO,QAAQC,eAAa,UAAe,sBAAMH,EAAE,qHAAqHN,KAAK,QAAQQ,OAAO,QAAQC,eAAa,UAAe,sBAAMH,EAAE,qFAAqFN,KAAK,QAAQQ,OAAO,QAAQC,eAAa,UAAe,sBAAMH,EAAE,qDAAqDN,KAAK,QAAQQ,OAAO,QAAQC,eAAa,UAAe,sBAAMH,EAAE,qFAAqFN,KAAK,QAAQQ,OAAO,QAAQC,eAAa,UAAe,sBAAML,YAAU,UAAUC,YAAU,UAAUC,EAAE,myBAAmyBN,KAAK,UAAe,sBAAMM,EAAE,unFAAunFN,KAAK,UAAe,sBAAMM,EAAE,8KAA8KN,KAAK,QAAQQ,OAAO,QAAQC,eAAa,UAAe,sBAAML,YAAU,UAAUC,YAAU,UAAUC,EAAE,ipHAAipHN,KAAK,UAAe,sBAAMM,EAAE,qNAAqNN,KAAK,wBAA6B,sBAAMM,EAAE,mLAAmLN,KAAK,wBAA6B,sBAAMM,EAAE,qHAAqHN,KAAK,wBAA6B,sBAAMM,EAAE,sHAAsHN,KAAK,wBAA6B,iCAAM,iCAAgBZ,GAAG,gBAAgBsB,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,SAASC,cAAc,iBAArG,UAAsH,sBAAMC,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,IAAID,aAAW,eAAkC,iCAAgB3B,GAAG,gBAAgBsB,GAAG,UAAUC,GAAG,UAAUC,GAAG,YAAYC,GAAG,UAAUC,cAAc,iBAAvG,UAAwH,sBAAMC,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,IAAID,aAAW,eAAkC,iCAAgB3B,GAAG,gBAAgBsB,GAAG,WAAWC,GAAG,UAAUC,GAAG,WAAWC,GAAG,UAAUC,cAAc,iBAAvG,UAAwH,sBAAMC,aAAW,YAAiB,sBAAMC,OAAO,IAAID,aAAW,eAAkC,iCAAgB3B,GAAG,gBAAgBsB,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,UAAUC,cAAc,iBAAtG,UAAuH,sBAAMC,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,SAASD,aAAW,YAAiB,sBAAMC,OAAO,IAAID,aAAW,uBAE3+V,cAAC,IAAD,CAAM3C,UAAU,YAAYwB,KAAK,GAAjC,SACI,sBAAKG,QAAQ,aAAaC,KAAK,OAAOE,MAAM,MAAMC,OAAO,KAAzD,UAA8D,sBAAMG,EAAE,wkBAAwkBN,KAAK,UAAe,sBAAMM,EAAE,oNAAoNN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,gRAAgRN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,61BAA61BN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,+1BAA+1BN,KAAK,UAAe,sBAAMM,EAAE,87BAA87BN,KAAK,UAAe,sBAAMM,EAAE,0WAA0WN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,2xBAA2xBN,KAAK,UAAe,sBAAMM,EAAE,uaAAuaN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,qxBAAqxBN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,oUAAoUN,KAAK,UAAe,sBAAMM,EAAE,iNAAiNN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,goBAAgoBN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,wQAAwQN,KAAK,UAAe,sBAAMM,EAAE,qDAAqDN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,ynBAAynBN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,qhBAAqhBN,KAAK,UAAe,sBAAMM,EAAE,qDAAqDN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,weAAweN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,oaAAoaN,KAAK,UAAe,sBAAMM,EAAE,gVAAgVN,KAAK,UAAe,sBAAMM,EAAE,mUAAmUN,KAAK,UAAe,sBAAMM,EAAE,2RAA2RN,KAAK,UAAe,sBAAMI,YAAU,UAAUC,YAAU,UAAUC,EAAE,4eAA4eN,KAAK,eAE7nY,eAAC,IAAD,CAAM5B,UAAU,YAAYwB,KAAK,GAAjC,UACA,qBAAKxB,UAAU,UAAU8B,MAAM,KAAKC,OAAO,KAAKJ,QAAQ,YAAYC,KAAK,eAAzE,SAAwF,sBAAMM,EAAE,sjCAChG,sBAAMlC,UAAU,YAAhB,iBACA,uBACA,sBAAMA,UAAU,iBAAhB,4BAGJ,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,eAAC,IAAD,CAAMA,UAAU,WAAhB,UACA,sBAAK8B,MAAM,KAAKC,OAAO,KAAKJ,QAAQ,YAAYC,KAAK,eAAeC,MAAM,WAA1E,UAAqF,sBAAMK,EAAE,uZAA4Z,sBAAMA,EAAE,0wCACjgB,mBAAGlC,UAAU,WAAb,mCAEA,eAAC,IAAD,CAAMA,UAAU,WAAhB,UACA,qBAAK8B,MAAM,KAAKC,OAAO,KAAKJ,QAAQ,YAAYC,KAAK,OAAOC,MAAM,WAAlE,SAA6E,sBAAMK,EAAE,o5BAAo5BN,KAAK,YAC9+B,mBAAG5B,UAAU,WAAb,wCAGJ,sBAAKA,UAAU,eAAf,UACI,eAAC,IAAD,CAAMA,UAAU,WAAhB,UACA,qBAAK8B,MAAM,KAAKC,OAAO,KAAKJ,QAAQ,YAAYC,KAAK,eAAeC,MAAM,WAA1E,SAAqF,sBAAMK,EAAE,ktCAC7F,mBAAGlC,UAAU,WAAb,qBAEA,eAAC,IAAD,CAAMA,UAAU,WAAhB,UACA,qBAAK8B,MAAM,KAAKC,OAAO,KAAKJ,QAAQ,YAAYC,KAAK,eAAeC,MAAM,WAA1E,SAAqF,sBAAMK,EAAE,ktCAC7F,mBAAGlC,UAAU,WAAb,0CAIR,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,UACA,qBAAKA,UAAU,WAAW6C,oBAAkB,kBAAkBlB,QAAQ,cAAcC,KAAK,eAAeE,MAAM,KAAKC,OAAO,KAA1H,SAA+H,sBAAMG,EAAE,wRAEvI,cAAC,IAAD,UACI,sBAAKlC,UAAU,WAAW2B,QAAQ,cAAcC,KAAK,eAAeE,MAAM,KAAKC,OAAO,KAAtF,UAA2F,sBAAMG,EAAE,iGAAsG,sBAAMA,EAAE,qnDAA0nD,sBAAMA,EAAE,i1CAEv1D,cAAC,IAAD,UACA,qBAAKlC,UAAU,WAAW6C,oBAAkB,gBAAgBlB,QAAQ,YAAYC,KAAK,eAAeE,MAAM,KAAKC,OAAO,KAAtH,SAA2H,sBAAMG,EAAE,yVAGvI,qBAAKlC,UAAU,eAAf,SACI,oBAAGA,UAAU,YAAb,4BAAqC,sBAAMA,UAAU,YAAhB,wBAArC,mB,qBCpCL8C,G,MAjBO,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,WAAY5B,EAAuB,EAAvBA,MAAO6B,EAAgB,EAAhBA,OAAQjC,EAAQ,EAARA,GACxD,OACI,8BAEA,eAAC,IAAD,CAAMd,GAAE,iBAAYc,GAAMhB,UAAU,aAApC,UACI,sBAAMA,UAAU,cAAhB,SAA+BiD,IAC/B,qBAAKjD,UAAU,kBAAf,SACA,qBAAKiB,IAAK8B,EAAS5B,IAAI,GAAGnB,UAAU,gBAEpC,oBAAIA,UAAU,aAAd,SAA4BoB,IAC5B,oBAAIpB,UAAU,YAAd,SAA2BgD,WCwExBE,G,MAjEG,WAAO,IAAD,EAEc7E,mBAAS,CAC3CG,WAAU,EACVC,KAAK,GACLC,MAAM,OALc,mBAEdC,EAFc,KAEHwE,EAFG,KAmCpB,OA1BFlE,qBAAU,WACVE,IAAMC,IAAI,+CAAgD,CACxDC,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd2D,EAAc,CACd3E,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyE,EAAc,CACZ3E,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,IAKG,qBAAKsB,UAAU,YAAf,SAEIrB,EAAUH,UACR,qBAAKwB,UAAU,aAAf,SAEIrB,EAAUF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACzB,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GAEViC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAME,gBAH5CvC,QASb,qBAAKc,MAAM,gB,iBC1EV,G,MAAA,IAA0B,mCCoB1B0B,EAhBE,SAAC,GAA0D,IAAzDR,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,WAAY5B,EAAmC,EAAnCA,MAAO6B,EAA4B,EAA5BA,OAAQxC,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,GAAc,EAAVwC,KAC7D,OACI,eAAC,IAAD,CAAMtD,GAAE,WAAMO,EAAN,YAAcO,GAAMhB,UAAU,aAAtC,UACI,sBAAMA,UAAU,cAAhB,SAA+BiD,IAC/B,qBAAKjD,UAAU,kBAAf,SACA,qBAAKiB,IAAK8B,EAAS5B,IAAI,GAAGnB,UAAU,gBAEpC,oBAAIA,UAAU,aAAd,SAA4BoB,IAC5B,oBAAIpB,UAAU,YAAd,SAA2BgD,IAC3B,qBAAK/B,IAAKwC,EAAMtC,IAAI,OAAOnB,UAAU,UACrC,qBAAKA,UAAU,eCbZ0D,ICCAC,G,MCCC,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,IAAK5C,EAAc,EAAdA,GAAIP,EAAU,EAAVA,KACvB,OACI,cAAC,IAAD,CAAMP,GAAE,WAAMO,EAAN,YAAcO,GAAMhB,UAAU,WAAtC,SACI,qBAAKA,UAAU,YAAYiB,IAAK2C,EAAKzC,IAAI,eCgRtC0C,EA1QF,WAAO,IAAD,EAEWxF,mBAAS,CACnCG,WAAW,EACXC,KAAM,GACNC,MAAO,OALQ,mBAEVoF,EAFU,KAEFC,EAFE,KAUjB9E,qBAAU,WACRE,IAAMC,IAAI,0CAA2C,CACnDC,OAAQ,CACNC,QAAS,sCAGVC,MAAK,SAAUC,GACduE,EAAU,CACRvF,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACfqF,EAAU,CACRvF,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,IA9Bc,MAgCeL,mBAAS,CACvCG,WAAW,EACXC,KAAM,GACNC,MAAO,OAnCQ,mBAgCVsF,EAhCU,KAgCAC,EAhCA,KAwCjBhF,qBAAU,WACRE,IAAMC,IAAI,+CAAgD,CACxDC,OAAQ,CACNC,QAAS,sCAGVC,MAAK,SAAUC,GACdyE,EAAY,CACVzF,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACfuF,EAAY,CACVzF,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,IA5Dc,MA+DiBL,mBAAS,CACzCG,WAAW,EACXC,KAAM,GACNC,MAAO,OAlEQ,mBA+DVC,EA/DU,KA+DCwE,EA/DD,KAsEjBlE,qBAAU,WACRE,IAAMC,IAAI,+CAAgD,CACxDC,OAAQ,CACNC,QAAS,sCAKVC,MAAK,SAAUC,GACd2D,EAAa,CACX3E,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACfyE,EAAa,CACX3E,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,IA5Fc,MAgGmBL,mBAAS,CAC3CG,WAAW,EACXC,KAAM,GACNC,MAAO,OAnGQ,mBAgGVwF,EAhGU,KAgGEC,EAhGF,KAuGjBlF,qBAAU,WACRE,IAAMC,IAAI,iDAAkD,CAC1DC,OAAQ,CACNC,QAAS,sCAKVC,MAAK,SAAUC,GACd2E,EAAc,CACZ3F,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACfyF,EAAc,CACZ3F,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,IAsCH,OACE,sBAAKsB,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,2BApCW,CACfoE,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,IA8BN,IAAsBzE,UAAU,eAAhC,SAEIrB,EAAUH,UACRG,EAAUF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACzB,cAAC,EAAD,CAEEC,GAAIoC,EAAMpC,GAEVP,KAAK,QAGLmD,IAAG,6CAAwCR,EAAME,gBAJ5CvC,MAQT,qBAAKc,MAAM,iBAOnB,sBAAK7B,UAAU,qBAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,cAAC,IAAD,2BAnDS,CACboE,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IA8CZ,aAEIV,EAAOtF,UACLsF,EAAOrF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACtB,cAAC,EAAD,CACEK,MAAOgC,EAAMsB,cACb1D,GAAIoC,EAAMpC,GAEViC,OAAQG,EAAMC,aACd5C,KAAK,UACLuC,WAAYI,EAAMuB,eAClB5B,QAAO,6CAAwCK,EAAMlC,cAJhDH,MAQT,mCAMR,sBAAKf,UAAU,eAAf,UACE,oBAAIA,UAAU,UAAd,6BACA,cAAC,IAAD,2BAlEa,CACjBoE,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IA6DZ,aAEIR,EAASxF,UACPwF,EAASvF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACxB,cAAC,EAAD,CACEK,MAAOgC,EAAMsB,cACb1D,GAAIoC,EAAMpC,GAEViC,OAAQG,EAAMC,aACd5C,KAAK,UACLuC,WAAYI,EAAMuB,eAClB5B,QAAO,6CAAwCK,EAAMlC,cAJhDH,MAQT,mCAOR,oBAAIf,UAAU,oBAAd,yBAGA,qBAAKA,UAAU,qBAAf,SACE,cAAC,IAAD,2BApFa,CACjBoE,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IA+EZ,aAEIN,EAAW1F,UACT0F,EAAWzF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OAC1B,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GAEVP,KAAK,QACLwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,6CAAwCK,EAAME,gBAJhDvC,MAQT,qBAAKc,MAAM,qBChMV+C,EAlEA,WAAO,IAAD,EAEiBvG,mBAAS,CAC3CG,WAAU,EACVC,KAAK,GACLC,MAAM,OALW,mBAEXC,EAFW,KAEAwE,EAFA,KAoCjB,OA1BFlE,qBAAU,WACVE,IAAMC,IAAI,6CAA8C,CACtDC,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd2D,EAAc,CACd3E,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyE,EAAc,CACZ3E,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,IAKG,qBAAKsB,UAAU,YAAf,SAEIrB,EAAUH,UACR,qBAAKwB,UAAU,aAAf,SAEIrB,EAAUF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACzB,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GACVP,KAAK,QAELwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAMlC,cAH5CH,QASb,qBAAKc,MAAM,e,QC9DVgD,G,OCDf,E,MCEe,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,KAAM/D,EAAQ,EAARA,GAC3B,OACI,cAAC,IAAD,CAAMd,GAAE,kBAAac,GAAMhB,UAAU,cAArC,SACI,sBAAKA,UAAU,SAAf,UAEI,qBAAKiB,IAAK6D,EAAQ3D,IAAI,OAAOnB,UAAU,cACvC,oBAAIA,UAAU,aAAd,SAA4B+E,W,QCmO7BC,EAjOK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAUC5G,mBAAS,CACzCG,WAAW,EACXC,KAAM,GACNC,MAAO,OAbwB,mBAU1BwG,EAV0B,KAUfC,EAVe,KAiBjClG,qBAAU,WACRE,IAAMC,IAAN,6CAAgD6F,EAAM5F,OAAO2B,IAAM,CACjE3B,OAAQ,CACNC,QAAS,sCAKVC,MAAK,SAAUC,GACd2F,EAAa,CACX3G,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACfyG,EAAa,CACX3G,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,CAACuG,EAAM5F,OAAO2B,KAvCgB,MA2CC3C,mBAAS,CACzCG,WAAW,EACXC,KAAM,GACNC,MAAO,OA9CwB,mBA2C1B0G,EA3C0B,KA2CfC,EA3Ce,KAkDjCpG,qBAAU,WACRE,IAAMC,IAAN,6CAAgD6F,EAAM5F,OAAO2B,GAA7D,YAA2E,CACzE3B,OAAQ,CACNC,QAAS,sCAKVC,MAAK,SAAUC,GACd6F,EAAa,CACX7G,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACf2G,EAAa,CACX7G,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,CAACuG,EAAM5F,OAAO2B,KAxEgB,MA2EC3C,mBAAS,CACzCG,WAAW,EACXC,KAAM,GACNC,MAAO,OA9EwB,mBA2E1B4G,EA3E0B,KA2EfC,EA3Ee,KAkFjCtG,qBAAU,WACRE,IAAMC,IAAN,6CAAgD6F,EAAM5F,OAAO2B,GAA7D,oBAAmF,CACjF3B,OAAQ,CACNC,QAAS,sCAKVC,MAAK,SAAUC,GACd+F,EAAa,CACX/G,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGVe,OAAM,SAAUf,GACf6G,EAAa,CACX/G,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,CAACuG,EAAM5F,OAAO2B,KAxGgB,MA0GK3C,mBAAS,CAC7CG,WAAW,EACXC,KAAM,GACNC,MAAO,OA7GwB,6BAqHjC,OAFA8G,QAAQC,IAAIP,EAAUzG,MAGpB,mCAEE,sBAAKuB,UAAU,wBAAf,UACE,qBAAKA,UAAU,OAAf,SAGIkF,EAAU1G,WAAa4G,EAAU5G,UAE/B,sBAAKwB,UAAU,QAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKiB,IAAG,6CAAwCiE,EAAUzG,KAAKyC,aAAeC,IAAI,OAAOnB,UAAU,eAErG,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BkF,EAAUzG,KAAK2C,QAE1C,eAACsE,EAAA,EAAD,WACE,gCAAQR,EAAUzG,KAAK2C,QACvB,sBAAMuE,QAAQ,UACd,sBAAMC,IAAI,OACRnF,KAAK,YAAYe,KAAK,kCAE1B,qBAAIxB,UAAU,iBAAd,mBAAqC,sBAAMA,UAAU,QAAhB,SAAyBkF,EAAUzG,KAAK4C,kBAC7E,mBAAGrB,UAAU,aAAb,SAA2BkF,EAAUzG,KAAKoH,WAC1C,qBAAI7F,UAAU,cAAd,qBAAsCoF,EAAU3G,KAAKqH,KAAKjF,KAAI,SAAAC,GAAI,OAChE,oBAAGd,UAAU,aAAb,UAA2Bc,EAAKiE,KAAhC,aAEF,qBAAI/E,UAAU,wBAAd,uBAAkDoF,EAAU3G,KAAKsH,KAAKlF,KAAI,SAAAC,GAAI,OAAK,mCACpE,YAAZA,EAAKkF,IAAqB,oBAAGhG,UAAU,aAAb,UAA2Bc,EAAKiE,KAAhC,OAA+C,mBAOhF,sBAAK/E,UAAU,aAAf,UACI,eAAC0F,EAAA,EAAD,WACE,+CACA,sBAAMC,QAAQ,UACd,sBAAMC,IAAI,OACRnF,KAAK,YAAYe,KAAK,kCAG1B4D,EAAU3G,KAAKqH,KAAKjF,KAAI,SAACuC,EAAOrC,GAAR,OAEtB,cAAC,EAAD,CACEC,GAAIoC,EAAMpC,GAEV8D,QACE1B,EAAM6C,aAAN,6CACwC7C,EAAM6C,eAGhD7E,MAAOgC,EAAM2B,KAEbA,KAAM3B,EAAM2B,MADPhE,YAQf,qBAAKc,MAAM,cAOjB,sBAAK7B,UAAU,cAAf,UACE,oBAAIA,UAAU,WAAd,6BACA,cAAC,IAAD,2BA3LM,CACZoE,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IAsLV,aAEIc,EAAU9G,UAER8G,EAAU7G,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OAEzB,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GACVP,KAAK,QAELwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAMlC,cAH5CH,MAUT,yCChHDmF,EAjGC,SAAC,GAAa,IAAZjB,EAAW,EAAXA,MAAW,EAEK5G,mBAAS,CACvCG,WAAU,EACVC,KAAK,GACLC,MAAM,OALmB,mBAEVyH,GAFU,WAS3BlH,qBAAU,WACVE,IAAMC,IAAN,0CAA6C6F,EAAM5F,OAAO2B,GAA1D,oBAAgF,CAC9E3B,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd2G,EAAY,CACZ3H,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyH,EAAY,CACV3H,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,CAACuG,EAAM5F,OAAO2B,KA/BU,MAiCS3C,mBAAS,CAC3CG,WAAU,EACVC,KAAK,GACLC,MAAM,OApCmB,mBAiCnBC,EAjCmB,KAiCRwE,EAjCQ,KAiEzB,OAxBFlE,qBAAU,WACVE,IAAMC,IAAI,0CAA2C,CACnDC,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAUC,GACd2D,EAAc,CACd3E,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyE,EAAc,CACZ3E,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,CAACuG,EAAM5F,OAAO2B,KAKX,sBAAKhB,UAAU,YAAf,UAEIrB,EAAUH,UACR,qBAAKwB,UAAU,aAAf,SAEIrB,EAAUF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACzB,cAAC,EAAD,CACEK,MAAOgC,EAAMsB,cACb1D,GAAIoC,EAAMpC,GAEViC,OAAQG,EAAMC,aACd5C,KAAK,UACLuC,WAAYI,EAAMuB,eAClB5B,QAAO,yCAAoCK,EAAMlC,cAJ5CH,QAUb,qBAAKc,MAAM,YAGf,qBAAK7B,UAAU,mBCsFVoG,EAhLI,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAAY,EAUI5G,mBAAS,CAC3CG,WAAU,EACVC,KAAK,GACLC,MAAM,OAbwB,mBAUxBwG,EAVwB,KAUbC,EAVa,KAkBhClG,qBAAU,WACVE,IAAMC,IAAN,0CAA6C6F,EAAM5F,OAAO2B,IAAM,CAC9D3B,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd2F,EAAc,CACd3G,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyG,EAAc,CACZ3G,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,CAACuG,EAAM5F,OAAO2B,KAxCe,MA0CI3C,mBAAS,CAC3CG,WAAU,EACVC,KAAK,GACLC,MAAM,OA7CwB,mBA0CxB0G,EA1CwB,KA0CbC,EA1Ca,KAiDhCpG,qBAAU,WACVE,IAAMC,IAAN,0CAA6C6F,EAAM5F,OAAO2B,GAA1D,YAAwE,CACtE3B,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd6F,EAAc,CACd7G,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAIRe,OAAM,SAAUf,GACf2G,EAAc,CACZ7G,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,CAACuG,EAAM5F,OAAO2B,KAxEe,MA0EA3C,mBAAS,CACvCG,WAAU,EACVC,KAAK,GACLC,MAAM,OA7EwB,mBA0ExB2H,EA1EwB,KA0EfF,EA1Ee,KA4G9B,OA3BFlH,qBAAU,WACVE,IAAMC,IAAN,0CAA6C6F,EAAM5F,OAAO2B,GAA1D,oBAAgF,CAC9E3B,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd2G,EAAY,CACZ3H,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyH,EAAY,CACV3H,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,CAACuG,EAAM5F,OAAO2B,KAEjBwE,QAAQC,IAAIL,GAIN,sBAAKpF,UAAU,wBAAf,UAEIkF,EAAU1G,WAAa4G,EAAU5G,UAE/B,sBAAKwB,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKiB,IAAG,yCAAoCiE,EAAUzG,KAAKyC,aAAeC,IAAI,OAAOnB,UAAU,eAE/F,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BkF,EAAUzG,KAAKsG,OAC1C,qBAAI/E,UAAU,eAAd,sBAAsC,sBAAMA,UAAU,QAAhB,SAAyBkF,EAAUzG,KAAK6H,qBAAqB,GAAGvB,UAEtG,qBAAI/E,UAAU,iBAAd,4BAA8C,sBAAMA,UAAU,QAAhB,SAAyBkF,EAAUzG,KAAK8H,mBACpF,mBAAGvG,UAAU,aAAb,SAA2BkF,EAAUzG,KAAKoH,iBAKlD,oBAAI7F,UAAU,aAAd,oBACF,qBAAKA,UAAU,aAAf,SAEIoF,EAAU3G,KAAKqH,KAAKjF,KAAI,SAACuC,EAAOrC,GAAR,OACtB,cAAC,EAAD,CACEC,GAAIoC,EAAMpC,GACV8D,OAAM,yCAAoC1B,EAAM6C,cAEhD7E,MAAOgC,EAAM2B,MADRhE,WAQb,qBAAKc,MAAM,YAIX,oBAAI7B,UAAU,WAAd,6BACC,qBAAKA,UAAU,cAAf,SACK,cAAC,IAAD,2BAnJF,CACdoE,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAa,EACbC,eAAgB,IA8IA,aAEA6B,EAAQ7H,UACN6H,EAAQ5H,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACzB,8BACA,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GACVP,KAAK,UAELwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAMlC,cAH5CH,QAQP,sCCrGPyF,EAjEK,WAAO,IAAD,EAEgBnI,mBAAS,CAC/CG,WAAU,EACVC,KAAK,GACLC,MAAM,OALgB,mBAEhB+H,EAFgB,KAEHC,EAFG,KAqCtB,OA3BFzH,qBAAU,WACVE,IAAMC,IAAI,4CAA6C,CACrDC,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACdgG,QAAQC,IAAIjG,GACZkH,EAAgB,CAChBlI,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfgI,EAAgB,CACdlI,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,IAGL8G,QAAQC,IAAIgB,GAEN,qBAAKzG,UAAU,YAAf,SAEEyG,EAAYjI,UACV,qBAAKwB,UAAU,aAAf,SACA,sBAAKA,UAAU,mBAAf,UACO,qBAAKA,UAAU,WAGd,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,YAAd,SAA2ByG,EAAYrF,QAGvC,qBAAIpB,UAAU,iBAAd,mBAAqC,sBAAMA,UAAU,aACpD,mBAAGA,UAAU,uBAKzB,+CCSK2G,EAlEE,WAAO,IAAD,EAEctI,mBAAS,CAC1CG,WAAU,EACVC,KAAK,GACLC,MAAM,OALa,mBAEbiI,EAFa,KAEHxD,EAFG,KAoCnB,OA1BFlE,qBAAU,WACVE,IAAMC,IAAI,8CAA+C,CACvDC,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACd2D,EAAc,CACd3E,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfyE,EAAc,CACZ3E,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGP,IAKG,qBAAKsB,UAAU,YAAf,SAEI2G,EAASnI,UACP,qBAAKwB,UAAU,aAAf,SAGI2G,EAASlI,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OACxB,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GAEVP,KAAK,QACLwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAMlC,cAJ5CH,QAUb,qBAAKc,MAAM,eCqBV+E,EA1EK,SAAC,GAAe,IAAb3B,EAAY,EAAZA,MAAY,EAEC5G,mBAAS,CACzCG,WAAW,EACXC,KAAM,GACNC,MAAO,OALwB,mBAE1BC,EAF0B,KAEfwE,EAFe,KAmCjC,OAzBAlE,qBAAU,WACRE,IAAMC,IAAN,8CAAiD6F,EAAM5F,OAAO2B,GAA9D,kBAAkF,CAChF3B,OAAQ,CACNC,QAAS,sCAKVC,MAAK,SAAUC,GACd2D,EAAa,CACX3E,WAAW,EACXC,KAAMe,EAASf,KAAKqH,KACpBpH,OAAO,OAGVe,OAAM,SAAUf,GACfyE,EAAa,CACX3E,WAAW,EACXC,KAAM,GACNC,MAAOA,SAGZ,CAACuG,EAAM5F,OAAO2B,KAEjBwE,QAAQC,IAAI9G,GAMV,sBAAKqB,UAAU,YAAf,UACE,eAAC0F,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,8CACA,sBAAMC,IAAI,OACRnF,KAAK,YAAYe,KAAK,kCAGxB7C,EAAUH,UACR,qBAAKwB,UAAU,aAAf,SAEIrB,EAAUF,KAAKoC,KAAI,SAACuC,EAAOrC,GAAR,OACjB,cAAC,EAAD,CACEK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GAEVP,KAAK,QACLwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAME,gBAJ5CvC,QAUb,qBAAKc,MAAM,gBCRNgF,EAjEO,SAAC,GAAe,IAAb5B,EAAY,EAAZA,MAAY,EAEG5G,mBAAS,CAC7CG,WAAU,EACVC,KAAK,GACLC,MAAM,OAL2B,mBAEzBC,EAFyB,KAEdC,EAFc,KAkCjC,OAzBJK,qBAAU,WACFE,IAAMC,IAAN,0DAA6D6F,EAAM5F,OAAOyH,aAAe,CAC7FzH,OAAQ,CACNC,QAAS,sCAKZC,MAAK,SAAUC,GACdZ,EAAc,CACdJ,WAAW,EACXC,KAAMe,EAASf,KACfC,OAAO,OAGRe,OAAM,SAAUf,GACfE,EAAc,CACZJ,WAAU,EACVC,KAAK,GACLC,MAAMA,SAGT,CAACuG,EAAM5F,OAAOyH,cAIT,qBAAK9G,UAAU,YAAf,SAEIrB,EAAUH,UACR,qBAAKwB,UAAU,aAAf,SAEMrB,EAAUF,KAAKkC,QAAQzB,OAAS,EAC5BP,EAAUF,KAAKkC,QAAQE,KAAI,SAACuC,EAAOrC,GAAR,OAC3B,cAAC,EAAD,CACIK,MAAOgC,EAAMhC,MACbJ,GAAIoC,EAAMpC,GACVP,KAAK,QAELwC,OAAQG,EAAMC,aACdL,WAAYI,EAAM/B,aAClB0B,QAAO,yCAAoCK,EAAMlC,cAH5CH,MAOX,qBAAKc,MAAM,cAKnB,gCCLCkF,MA7Bf,WACE,OACE,qBAAK/G,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,WAAf,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgH,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,UAAUC,UAAWtC,IACvC,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,gBAAgBC,UAAWV,IAC7C,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,aAAaC,UAAWP,IAC1C,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,iBAAiBC,UAAWP,IAC9C,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,cAAcC,UAAWhE,IAC3C,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,YAAYC,UAAWhB,IACzC,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,aAAaC,UAAWlC,IAC1C,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,eAAeC,UAAWC,IAC5C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,kBAAkBC,UAAWC,IAC/C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,cAAcC,UAAWN,IAC3C,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,uBAAuBC,UAAWL,SAItD,cAAC,EAAD,UChDRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.161ecb03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search1.e812323a.png\";","export default __webpack_public_path__ + \"static/media/Film-icon.60418c10.png\";","export default __webpack_public_path__ + \"static/media/imdb.843e7580.png\";","import Header from './header-containers'\n\nexport default Header;","import './header-containers.scss'\nimport searchicon from '../../images/icon/search1.png'\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from 'react'\nimport SearchItem from '../../components/search-item'\n\nimport { Link, useHistory } from 'react-router-dom'\n\nimport filmIcom from '../../images/icon/Film-icon.png'\nimport filmIcom1 from '../../images/icon/imdb.png'\n\n\n\nconst HeaderContainers = () => {\n    let history = useHistory();\n    const [elementClass, setElementClass] = useState(false)\n    const [searchClass, setSearchClass] = useState(false)\n    const [ movieList, SetMovieList ] = useState({\n        isFetched:false,\n        data:{},\n        error:null\n    \n      })\n\n\n    const [linkClick, setLinkClick] = useState('')\n\n    const [searchValue, setSearchValue] = useState('')\n\n    const getSearchetMovies = () => {\n        axios.get(`https://api.themoviedb.org/3/search/movie?query=${searchValue}`, {\n            params: {\n                api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n            }\n        })\n\n\n            .then(function (response) {\n                SetMovieList({\n                    isFetched: true,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(function (error) {\n                SetMovieList({\n                    isFetched: true,\n                    data: [],\n                    error: error\n                })\n            })\n    }\n\n    useEffect(() => {\n        if (searchValue.length > 0) {\n            \n            getSearchetMovies();\n        } else {\n            // history.push(`/`)\n        }\n    }, [searchValue]);\n\n    const inputRef = useRef()\n    const inputHandler = () => {\n        inputRef.current.focus();\n        setElementClass(!elementClass)\n    }\n    window.addEventListener('keypress', (e) => {\n        if (e.key == 'Enter') {\n            setElementClass(false)\n            \n        }\n    })\n\n    const nimadir = () => history.push(`/search/${searchValue}`)\n\n    return (\n        <div className=\"header\">\n            <div onClick={() => setElementClass(!elementClass)} className={`modal-input ${elementClass ? \"activ\" : \" \"}`}  >\n            </div>\n            <div className=\"header-inner\">\n                <div className=\"header-left\">\n                    <Link to=\"/\" onClick={() => setLinkClick('/')} className={`header-logotip ${linkClick == '/' ? 'activ' : ''}`}>\n                        <h2 className=\"logotip\">\n                            <span className=\"one-spane q\">F</span>\n                            <span className=\"one-spane w\">I</span>\n                            <span className=\"one-spane e\">R</span>\n                            <span className=\"one-spane r\">S</span>\n                            <span className=\"one-spane t\">T</span>\n                            <span className=\"two-spane y\">M</span>\n                            <span className=\"two-spane u\">O</span>\n                            <span className=\"two-spane i\">V</span>\n                            <span className=\"two-spane o\">I</span>\n                            <span className=\"two-spane p\">E</span>\n\n                        </h2>\n                    </Link>\n                </div>\n                <div className=\"header-middle\">\n                    <Link to=\"/movies\" onClick={() => setLinkClick('movies')} className={`header-link ${linkClick == 'movies' ? 'activ' : ''}`}>Movies</Link>\n                    <Link to=\"/tv-shows\" onClick={() => setLinkClick('tv-shws')} className={`header-link ${linkClick == 'tv-shws' ? 'activ' : ''}`}>Tv-shovs</Link>\n                    <Link to=\"/High-Score\" onClick={() => setLinkClick('High-Score')} className={`header-link ${linkClick == 'High-Score' ? 'activ' : ''}`}>High-Score</Link>\n                    <Link to=\"/Movie-Get\" onClick={() => setLinkClick('Movie-Get')} className={`header-link ${linkClick == 'Movie-Get' ? 'activ' : ''}`}>Movie-get</Link>\n                </div>\n                <div className=\"header-right\">\n                    <div >\n\n                        <div className=\"input-div\">\n                            <form onSubmit={nimadir}>\n                            <input ref={inputRef} onChange={(e) => setSearchValue(e.target.value)} value={searchValue} type=\"search\" placeholder=\"Search\" className={`input ${elementClass ? \"activ\" : \" \"}`} />\n                            </form>\n                            <div className={`search-result ${elementClass ? \"activ\" : \" \"}`}>\n                                {\n                                    movieList.isFetched ? (\n                                        \n                                        <div className=\"div\">\n                                            {\n                                                movieList.data.results.length > 0 ? (\n                                                    <div>\n                                                        {\n                                                            movieList.data.results.splice(0, 3).map((item, index) => (\n                                                                <Link to={`/movie/${item.id}`} className=\"search-item\">\n                                                                    <div className=\"search-left\">\n                                                                        <div className=\"left-inner\">\n                                                                        <img className=\"film-photo\" src={`https://image.tmdb.org/t/p/original${item.poster_path}`} alt=\"\"/>\n                                                                        </div>\n                                                                        <div className=\"left-right\">\n                                                                            <h4 className=\"film-name\" key={index}>{item.title}</h4>\n                                                                            <p className=\"film-date\">{item.release_date}</p>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"search-right\">\n                                                                        <img src={filmIcom} alt=\"\" className=\"search-img\"/>\n                                                                        <img src={filmIcom1} alt=\"\" className=\"search-img\"/>\n                                                                    </div>\n                                                                </Link>\n                                                            ))\n                                                        }\n                                                        <Link className=\"allResults\" to={`/search/${searchValue}`}>All results</Link>\n                                                    </div>\n                                                ) : (\n                                                    <h1>There is no such movie.</h1>\n                                                    )\n                                            }\n                                        </div>\n                                    ) : (\n                                        <></>\n                                    )\n                                }\n                            </div>\n                        </div>\n                        <a href=\"javascript:void(0)\" onClick={() => inputHandler()} className=\"search\" >\n                            <svg className=\"search-svg\" viewBox=\"0 0 20 20\" fill=\"none\" class=\"\" width=\"20\" height=\"20\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.9469 13.7714L19.7551 18.5796C20.0816 18.902 20.0816 19.4327 19.7551 19.7551C19.4286 20.0816 18.902 20.0816 18.5755 19.7551L13.7673 14.951C12.3143 16.1429 10.4571 16.8571 8.42857 16.8571C3.77143 16.8571 0 13.0816 0 8.42857C0 3.77551 3.77143 0 8.42857 0C13.0816 0 16.8571 3.77551 16.8571 8.42857C16.8571 10.4571 16.1388 12.3184 14.9469 13.7714ZM1.67347 8.42857C1.67347 12.151 4.70204 15.1796 8.42857 15.1796C12.151 15.1796 15.1837 12.151 15.1837 8.42857C15.1837 4.70612 12.151 1.67347 8.42857 1.67347C4.70204 1.67347 1.67347 4.70612 1.67347 8.42857Z\" fill=\"white\"></path></svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HeaderContainers;\n","import Footer from './footer'\nexport default Footer;","import {Link} from 'react-router-dom'\nimport './footer.scss'\n\nconst Footer = () => {\n    return ( \n        <div className=\"footer\">\n            <div className=\"footer-inner container\">\n            <div className=\"footer-left\">\n                <Link className=\"left-link\" href=\"\">\n                    <svg viewBox=\"0 0 119 28\" fill=\"none\" width=\"110\" height=\"30\"><path d=\"M38.2764 3.97426C38.2764 4.79633 38.0217 5.45473 37.52 5.94575C36.9432 6.52785 36.1919 6.82074 35.2713 6.82074C34.3914 6.82074 33.6401 6.52293 33.0238 5.93591C32.4062 5.34028 32.0981 4.60927 32.0981 3.73429C32.0981 2.8593 32.4062 2.12829 33.0238 1.53758C33.6401 0.945643 34.3914 0.647827 35.2713 0.647827C35.7093 0.647827 36.127 0.735203 36.5255 0.897648C36.9228 1.06132 37.2463 1.28284 37.4806 1.55604L36.9483 2.07538C36.5395 1.60896 35.9831 1.37883 35.2713 1.37883C34.6295 1.37883 34.0731 1.59542 33.6006 2.0323C33.1333 2.47041 32.899 3.03774 32.899 3.73429C32.899 4.43083 33.1333 5.00308 33.6006 5.44119C34.0731 5.87315 34.6295 6.09466 35.2713 6.09466C35.9525 6.09466 36.5255 5.87315 36.9776 5.43627C37.2755 5.14707 37.4449 4.74834 37.4895 4.23885H35.2713V3.52754H38.2306C38.2662 3.68137 38.2764 3.83028 38.2764 3.97426Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.625\"></path><path d=\"M42.9713 1.50805H40.1915V3.37863H42.6975V4.08995H40.1915V5.96053H42.9713V6.68538H39.4046V0.783203H42.9713V1.50805Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.625\"></path><path d=\"M46.2846 6.68538H45.4976V1.50805H43.7926V0.783203H47.9909V1.50805H46.2846V6.68538Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.625\"></path><path d=\"M51.0291 6.68538V0.783203H51.8147V6.68538H51.0291Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.625\"></path><path d=\"M55.2973 6.68538H54.5167V1.50805H52.8054V0.783203H57.0087V1.50805H55.2973V6.68538Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.625\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.7184 6.82074C63.6085 6.82074 64.3547 6.52293 64.957 5.92606C65.558 5.33043 65.8573 4.59943 65.8573 3.73429C65.8573 2.87406 65.558 2.14798 64.9519 1.54743C64.3496 0.945643 63.6034 0.647827 62.7184 0.647827C61.8233 0.647827 61.0771 0.945643 60.4748 1.54251C59.8738 2.13814 59.5745 2.86914 59.5745 3.73429C59.5745 4.59943 59.8738 5.33043 60.4748 5.92606C61.0771 6.52293 61.8233 6.82074 62.7184 6.82074ZM62.7184 6.09466C62.0614 6.09466 61.51 5.87315 61.0567 5.43134C60.6047 4.98954 60.3755 4.42222 60.3755 3.73429C60.3755 3.04635 60.6047 2.47903 61.0567 2.03723C61.51 1.59542 62.0614 1.37391 62.7184 1.37391C63.3704 1.37391 63.9268 1.59542 64.3751 2.03723C64.8271 2.47903 65.0563 3.04635 65.0563 3.73429C65.0563 4.42222 64.8271 4.98954 64.3751 5.43134C63.9268 5.87315 63.3704 6.09466 62.7184 6.09466Z\" fill=\"white\"></path><path d=\"M64.957 5.92606L65.177 6.14803L65.177 6.14803L64.957 5.92606ZM64.9519 1.54743L64.731 1.7685L64.7319 1.76942L64.9519 1.54743ZM60.4748 1.54251L60.2548 1.32054L60.2548 1.32054L60.4748 1.54251ZM60.4748 5.92606L60.2548 6.14803L60.2548 6.14803L60.4748 5.92606ZM61.0567 5.43134L60.8383 5.65483L60.8386 5.65514L61.0567 5.43134ZM61.0567 2.03723L60.8386 1.81343L60.8383 1.81374L61.0567 2.03723ZM64.3751 2.03723L64.1557 2.25979L64.1566 2.26071L64.3751 2.03723ZM64.3751 5.43134L64.1566 5.20786L64.1557 5.20879L64.3751 5.43134ZM64.737 5.70409C64.1965 6.23973 63.5308 6.50824 62.7184 6.50824V7.13324C63.6862 7.13324 64.5129 6.80613 65.177 6.14803L64.737 5.70409ZM65.5448 3.73429C65.5448 4.51857 65.2771 5.16889 64.737 5.7041L65.177 6.14803C65.839 5.49197 66.1698 4.68029 66.1698 3.73429H65.5448ZM64.7319 1.76942C65.2779 2.31037 65.5448 2.95614 65.5448 3.73429H66.1698C66.1698 2.79199 65.8381 1.9856 65.1718 1.32544L64.7319 1.76942ZM62.7184 0.960327C63.5253 0.960327 64.1906 1.22852 64.731 1.76849L65.1728 1.32636C64.5086 0.662766 63.6815 0.335327 62.7184 0.335327V0.960327ZM60.6948 1.76448C61.2351 1.22902 61.9007 0.960327 62.7184 0.960327V0.335327C61.7459 0.335327 60.9191 0.662263 60.2548 1.32054L60.6948 1.76448ZM59.887 3.73429C59.887 2.95 60.1547 2.29968 60.6948 1.76447L60.2548 1.32054C59.5928 1.9766 59.262 2.78828 59.262 3.73429H59.887ZM60.6948 5.7041C60.1547 5.16889 59.887 4.51857 59.887 3.73429H59.262C59.262 4.68029 59.5928 5.49197 60.2548 6.14803L60.6948 5.7041ZM62.7184 6.50824C61.9007 6.50824 61.2351 6.23955 60.6948 5.70409L60.2548 6.14803C60.9191 6.80631 61.7459 7.13324 62.7184 7.13324V6.50824ZM60.8386 5.65514C61.3522 6.15566 61.9826 6.40716 62.7184 6.40716V5.78216C62.1402 5.78216 61.6679 5.59063 61.2748 5.20755L60.8386 5.65514ZM60.063 3.73429C60.063 4.4989 60.321 5.14923 60.8383 5.65483L61.2751 5.20786C60.8884 4.82985 60.688 4.34553 60.688 3.73429H60.063ZM60.8383 1.81374C60.321 2.31934 60.063 2.96967 60.063 3.73429H60.688C60.688 3.12304 60.8884 2.63872 61.2751 2.26071L60.8383 1.81374ZM62.7184 1.06141C61.9826 1.06141 61.3522 1.31291 60.8386 1.81343L61.2748 2.26102C61.6679 1.87794 62.1402 1.68641 62.7184 1.68641V1.06141ZM64.5944 1.81467C64.085 1.3125 63.4485 1.06141 62.7184 1.06141V1.68641C63.2923 1.68641 63.7687 1.87835 64.1557 2.25978L64.5944 1.81467ZM65.3688 3.73429C65.3688 2.96967 65.1108 2.31934 64.5935 1.81374L64.1566 2.26071C64.5434 2.63872 64.7438 3.12304 64.7438 3.73429H65.3688ZM64.5935 5.65483C65.1108 5.14923 65.3688 4.4989 65.3688 3.73429H64.7438C64.7438 4.34553 64.5434 4.82985 64.1566 5.20786L64.5935 5.65483ZM62.7184 6.40716C63.4485 6.40716 64.085 6.15607 64.5944 5.6539L64.1557 5.20879C63.7687 5.59022 63.2923 5.78216 62.7184 5.78216V6.40716Z\" fill=\"white\"></path><path d=\"M66.9612 6.68538V0.783203H67.9163L70.8857 5.37351H70.9201L70.8857 4.23885V0.783203H71.6714V6.68538H70.8513L67.7418 1.86863H67.7074L67.7418 3.00821V6.68538H66.9612H66.9612Z\" fill=\"white\" stroke=\"white\" stroke-width=\"0.625\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.0246 16.2376H70.9609C70.533 15.7478 69.7168 15.3048 68.6829 15.3048C66.5131 15.3048 64.5292 17.1458 64.5292 19.5062C64.5292 21.8531 66.5131 23.6793 68.6829 23.6793C69.7168 23.6793 70.533 23.2326 70.9609 22.7281H71.0246V23.3286C71.0246 24.9297 70.1396 25.7899 68.7121 25.7899C67.5483 25.7899 66.8263 24.9777 66.5283 24.2947L64.8717 24.9629C65.3492 26.0729 66.6137 27.439 68.7121 27.439C70.9456 27.439 72.8302 26.1689 72.8302 23.0788V15.5595H71.0246V16.2376ZM38.6088 16.5884V18.3679H43.0057C42.8771 19.3622 42.5333 20.0932 42.0061 20.6027C41.3643 21.2181 40.3647 21.9011 38.6088 21.9011C35.9029 21.9011 33.784 19.7905 33.784 17.1754C33.784 14.5603 35.9029 12.4497 38.6088 12.4497C40.0719 12.4497 41.1364 13.0023 41.922 13.7185L43.2196 12.4645C42.1207 11.4504 40.6589 10.6714 38.6088 10.6714C34.8982 10.6714 31.7798 13.5893 31.7798 17.1754C31.7798 20.7615 34.8982 23.6793 38.6088 23.6793C40.6143 23.6793 42.1207 23.0443 43.3049 21.8531C44.5184 20.6803 44.8966 19.0312 44.8966 17.6996C44.8966 17.2861 44.8609 16.9059 44.7973 16.5884H38.6088ZM49.8958 15.3048C47.4981 15.3048 45.5486 17.0646 45.5486 19.4927C45.5486 21.9011 47.4981 23.6793 49.8958 23.6793C52.2922 23.6793 54.243 21.9011 54.243 19.4927C54.243 17.0646 52.2922 15.3048 49.8958 15.3048ZM55.0338 19.4927C55.0338 17.0646 56.9884 15.3048 59.381 15.3048C61.7787 15.3048 63.7333 17.0646 63.7333 19.4927C63.7333 21.9011 61.7787 23.6793 59.381 23.6793C56.9884 23.6793 55.0338 21.9011 55.0338 19.4927ZM56.9387 19.4927C56.9387 20.983 58.0682 22.0303 59.381 22.0303C60.6938 22.0303 61.8284 20.983 61.8284 19.4927C61.8284 17.9827 60.6938 16.9539 59.381 16.9539C58.0682 16.9539 56.9387 17.9827 56.9387 19.4927ZM47.4484 19.4927C47.4484 20.983 48.5817 22.0303 49.8958 22.0303C51.2086 22.0303 52.3381 20.983 52.3381 19.4927C52.3381 17.9827 51.2086 16.9539 49.8958 16.9539C48.5817 16.9539 47.4484 17.9827 47.4484 19.4927ZM81.0522 15.3048C83.301 15.3048 84.405 17.0314 84.7628 17.9679L84.9627 18.4442L79.1677 20.7615C79.6108 21.6032 80.3022 22.0303 81.2661 22.0303C82.2364 22.0303 82.9075 21.5688 83.4003 20.8722L84.8774 21.8235C84.405 22.5065 83.2564 23.6793 81.2661 23.6793C78.8047 23.6793 76.9686 21.8383 76.9686 19.4927C76.9686 17.0019 78.8238 15.3048 81.0522 15.3048ZM78.8544 19.3622C78.8047 17.7476 80.152 16.9206 81.1172 16.9206C81.8735 16.9206 82.5153 17.2861 82.7292 17.8092L78.8544 19.3622ZM76.0492 23.4246H74.1443V11.1181L76.0492 11.1181V23.4246ZM66.4341 19.5062C66.4341 20.9682 67.533 22.0303 68.8458 22.0303C70.1396 22.0303 71.1595 20.9682 71.1595 19.5062C71.1595 18.0307 70.1396 16.9539 68.8458 16.9539C67.533 16.9539 66.4341 18.0307 66.4341 19.5062ZM93.6813 11.1181H89.1253V23.4246H91.0251V18.7617H93.6813C95.7913 18.7617 97.8605 17.2861 97.8605 14.9393C97.8605 12.5937 95.7862 11.1181 93.6813 11.1181ZM91.0251 17.0499H93.731C95.1495 17.0499 95.9594 15.8918 95.9594 14.9393C95.9594 13.9683 95.1495 12.83 93.731 12.83H91.0251V17.0499ZM105.475 15.2814C104.102 15.2814 102.675 15.8672 102.088 17.1655L103.774 17.8485C104.137 17.1655 104.804 16.944 105.51 16.944C106.495 16.944 107.495 17.5163 107.51 18.5266V18.6559C107.166 18.4639 106.43 18.1796 105.525 18.1796C103.709 18.1796 101.859 19.1456 101.859 20.9485C101.859 22.5976 103.346 23.6597 105.018 23.6597C106.296 23.6597 107.002 23.1022 107.445 22.4536H107.51V23.4049L109.345 23.4049V18.6842C109.345 16.5022 107.659 15.2814 105.475 15.2814ZM103.759 20.983C103.759 21.7275 104.625 22.0254 105.246 22.0254C106.346 22.0254 107.361 21.2181 107.51 20.0785C107.002 19.8434 106.61 19.665 105.773 19.665C104.838 19.665 103.759 20.0305 103.759 20.983ZM116.03 15.5509L113.846 20.8858H113.781L111.524 15.5509H109.475L112.867 23.0062L110.931 27.1547H112.917L118.144 15.5509H116.03ZM100.81 23.4246H98.9046V11.1181H100.81V23.4246Z\" fill=\"white\"></path><path d=\"M0.602969 1.31109C0.30373 1.61382 0.130554 2.08516 0.130554 2.69556L0.130554 24.4681C0.130554 25.0785 0.30373 25.5499 0.602969 25.8526L0.676823 25.9191L13.3009 13.7234V13.4354L0.676823 1.23971L0.602969 1.31109Z\" fill=\"url(#paint0_linear)\"></path><path d=\"M17.5042 17.7906L13.3008 13.7234V13.4354L17.5093 9.36811L17.6035 9.42103L22.5874 12.1617C24.0097 12.9394 24.0097 14.2193 22.5874 15.002L17.6035 17.7377L17.5042 17.7906V17.7906Z\" fill=\"url(#paint1_linear)\"></path><path d=\"M17.6035 17.7377L13.3009 13.5794L0.602966 25.8526C1.07538 26.3326 1.84576 26.3904 2.72183 25.9105L17.6035 17.7377Z\" fill=\"url(#paint2_linear)\"></path><path d=\"M17.6035 9.42112L2.72183 1.2484C1.84576 0.773375 1.07538 0.831215 0.602966 1.31117L13.3009 13.5795L17.6035 9.42112Z\" fill=\"url(#paint3_linear)\"></path><defs><linearGradient id=\"paint0_linear\" x1=\"7.77132\" y1=\"40.7126\" x2=\"-12.3481\" y2=\"35.175\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#00A0FF\"></stop><stop offset=\"0.0066\" stop-color=\"#00A1FF\"></stop><stop offset=\"0.2601\" stop-color=\"#00BEFF\"></stop><stop offset=\"0.5122\" stop-color=\"#00D2FF\"></stop><stop offset=\"0.7604\" stop-color=\"#00DFFF\"></stop><stop offset=\"1\" stop-color=\"#00E3FF\"></stop></linearGradient><linearGradient id=\"paint1_linear\" x1=\"24.4395\" y1=\"23.6041\" x2=\"-0.209441\" y2=\"23.6041\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FFE000\"></stop><stop offset=\"0.4087\" stop-color=\"#FFBD00\"></stop><stop offset=\"0.7754\" stop-color=\"#FFA500\"></stop><stop offset=\"1\" stop-color=\"#FF9C00\"></stop></linearGradient><linearGradient id=\"paint2_linear\" x1=\"0.223957\" y1=\"19.9533\" x2=\"-15.1977\" y2=\"-6.9087\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FF3A44\"></stop><stop offset=\"1\" stop-color=\"#C31162\"></stop></linearGradient><linearGradient id=\"paint3_linear\" x1=\"-9.3115\" y1=\"29.2419\" x2=\"-2.42902\" y2=\"17.2459\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#32A071\"></stop><stop offset=\"0.0685\" stop-color=\"#2DA771\"></stop><stop offset=\"0.4762\" stop-color=\"#15CF74\"></stop><stop offset=\"0.8009\" stop-color=\"#06E775\"></stop><stop offset=\"1\" stop-color=\"#00F076\"></stop></linearGradient></defs></svg>\n                </Link>\n                <Link className=\"left-link\" href=\"\">\n                    <svg viewBox=\"0 0 119 32\" fill=\"none\" width=\"110\" height=\"30\"><path d=\"M18.6796 15.0182C18.6483 11.5273 21.5231 9.82896 21.6545 9.74989C20.0264 7.36377 17.5029 7.03774 16.6162 7.01175C14.4967 6.78754 12.4409 8.28659 11.3612 8.28659C10.26 8.28659 8.59744 7.03341 6.80556 7.07024C4.49972 7.10598 2.34258 8.44797 1.15949 10.5319C-1.28212 14.781 0.538851 21.0252 2.87809 24.4598C4.04825 26.143 5.41559 28.0201 7.20531 27.954C8.95624 27.8825 9.61028 26.833 11.7232 26.833C13.8168 26.833 14.431 27.954 16.2563 27.9118C18.1354 27.8825 19.3185 26.2221 20.4477 24.5248C21.8 22.5979 22.343 20.6981 22.3646 20.6007C22.3215 20.5855 18.7162 19.2013 18.6796 15.0182Z\" fill=\"white\"></path><path d=\"M15.327 5.06468C16.2749 3.89768 16.9234 2.31001 16.7434 0.698853C15.3715 0.758644 13.6557 1.63309 12.6677 2.77446C11.7936 3.78024 11.0127 5.42877 11.2144 6.97907C12.7555 7.09225 14.3379 6.21353 15.327 5.06468Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.663 27.3531H44.132L39.4528 13.157H36.5762L31.9177 27.3531H34.3214L35.6097 23.1832H40.3106L41.663 27.3531ZM38.6798 17.7269L39.9029 21.4338H36.0174L37.2198 17.7269C37.534 16.5481 37.7634 15.6563 37.9069 15.0526H37.9504C38.3069 16.4564 38.5505 17.3482 38.6798 17.7269Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.6427 26.2361C55.607 25.2259 56.0887 23.8498 56.0887 22.1089C56.0887 20.5504 55.6766 19.2938 54.8558 18.3369C54.0339 17.3822 53.0065 16.9054 51.7759 16.9054C50.2016 16.9054 49.0286 17.5166 48.2556 18.7391H48.2121L48.0828 17.1166H46.0443C46.1008 18.2665 46.1302 19.3877 46.1302 20.4811V31.5036H48.448V26.1326C49.0514 27.1012 50.0451 27.5844 51.4269 27.5844C52.7065 27.5844 53.7795 27.1354 54.6427 26.2361ZM53.0402 19.7269C53.499 20.3744 53.7273 21.1958 53.7273 22.1921C53.7273 23.2738 53.4838 24.1442 52.9967 24.8045C52.5108 25.4627 51.8313 25.7945 50.9583 25.7945C50.2147 25.7945 49.6102 25.5374 49.1449 25.0254C48.6796 24.5112 48.447 23.8829 48.447 23.1394V21.4315C48.447 21.2502 48.4828 21.0208 48.5546 20.7392C48.697 20.1355 49.0014 19.648 49.4667 19.2746C49.9309 18.9045 50.4506 18.7167 51.0225 18.7167C51.8661 18.7167 52.5391 19.0538 53.0402 19.7269Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.6418 26.2361C67.6061 25.2259 68.0877 23.8498 68.0877 22.1089C68.0877 20.5504 67.6746 19.2938 66.8549 18.3369C66.0308 17.3822 65.0034 16.9054 63.7738 16.9054C62.1985 16.9054 61.0255 17.5166 60.2536 18.7391H60.2101L60.0807 17.1166H58.0423C58.0988 18.2665 58.1282 19.3877 58.1282 20.4811V31.5036H60.446V26.1326C61.0494 27.1012 62.0431 27.5844 63.4249 27.5844C64.7055 27.5844 65.7775 27.1354 66.6418 26.2361ZM65.0371 19.7269C65.4959 20.3744 65.7253 21.1958 65.7253 22.1921C65.7253 23.2738 65.4818 24.1442 64.9947 24.8045C64.5099 25.4627 63.8304 25.7945 62.9563 25.7945C62.2105 25.7945 61.606 25.5363 61.1407 25.0254C60.6776 24.5112 60.4439 23.8829 60.4439 23.1394V21.4315C60.4439 21.2502 60.4819 21.0208 60.5526 20.7392C60.695 20.1355 60.9983 19.648 61.4636 19.2746C61.93 18.9045 62.4497 18.7167 63.0215 18.7167C63.8652 18.7167 64.5359 19.0538 65.0371 19.7269Z\" fill=\"white\"></path><path d=\"M81.5034 23.3709C81.5034 24.5795 81.0729 25.562 80.2173 26.3204C79.2758 27.1482 77.9614 27.5631 76.2763 27.5631C74.7195 27.5631 73.4714 27.2687 72.5299 26.6788L73.0659 24.7832C74.0824 25.3742 75.1989 25.6686 76.4144 25.6686C77.2884 25.6686 77.9679 25.4745 78.4528 25.0894C78.9388 24.7032 79.1845 24.1869 79.1845 23.5426C79.1845 22.9655 78.9812 22.4823 78.5822 22.0887C78.181 21.6961 77.5178 21.3302 76.5861 20.9942C74.053 20.0672 72.7854 18.7114 72.7854 16.9278C72.7854 15.7629 73.2333 14.8093 74.127 14.0636C75.0206 13.3191 76.2056 12.9468 77.6798 12.9468C78.9964 12.9468 80.0933 13.1719 80.9642 13.621L80.3825 15.4749C79.5628 15.0397 78.6376 14.8221 77.6026 14.8221C76.7851 14.8221 76.1437 15.0194 75.6849 15.412C75.2989 15.7629 75.1032 16.1907 75.1032 16.6985C75.1032 17.2585 75.3261 17.7236 75.7697 18.0884C76.1545 18.4244 76.8568 18.7903 77.8722 19.1829C79.1181 19.6757 80.0335 20.2496 80.6195 20.9089C81.2099 21.5681 81.5034 22.3906 81.5034 23.3709Z\" fill=\"white\"></path><path d=\"M89.1864 18.8234H86.6316V23.7933C86.6316 25.0574 87.0817 25.6878 87.984 25.6878C88.3982 25.6878 88.7418 25.6537 89.0136 25.5822L89.0777 27.3093C88.6211 27.4768 88.0199 27.561 87.2752 27.561C86.3598 27.561 85.6444 27.2869 85.128 26.7386C84.6138 26.1903 84.355 25.2718 84.355 23.9789V18.8192H82.833V17.1124H84.355V15.2381L86.6316 14.564V17.1124H89.1864V18.8234Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M99.3166 26.0259C100.232 25.0157 100.691 23.7239 100.691 22.1505C100.691 20.6187 100.248 19.3706 99.359 18.4041C98.4284 17.4078 97.1988 16.9086 95.6681 16.9086C94.0798 16.9086 92.8165 17.4142 91.8782 18.4255C90.9422 19.4357 90.4725 20.7349 90.4725 22.3212C90.4725 23.837 90.927 25.0936 91.8358 26.091C92.7447 27.0863 93.9634 27.5844 95.4963 27.5844C97.0847 27.5844 98.3588 27.066 99.3166 26.0259ZM97.6674 19.7877C98.0816 20.4608 98.2882 21.2651 98.2882 22.2028C98.2882 23.1426 98.074 23.9522 97.6478 24.6413C97.1456 25.4659 96.4509 25.8809 95.5648 25.8809C94.6592 25.8809 93.9602 25.4744 93.459 24.6616C93.0437 23.9906 92.8371 23.1842 92.8371 22.2454C92.8371 21.279 93.0437 20.4608 93.459 19.7877C93.9439 18.9748 94.656 18.5684 95.5844 18.5684C96.4857 18.5684 97.1814 18.9748 97.6674 19.7877Z\" fill=\"white\"></path><path d=\"M108.228 19.1167C107.999 19.0751 107.753 19.0538 107.498 19.0538C106.682 19.0538 106.052 19.3546 105.608 19.9605C105.223 20.4939 105.03 21.1681 105.03 21.982V27.353H102.712V20.3403C102.712 19.1615 102.689 18.0863 102.644 17.1177H104.663L104.748 19.0762H104.812C105.058 18.4031 105.443 17.8601 105.971 17.4537C106.488 17.0878 107.045 16.9054 107.646 16.9054C107.861 16.9054 108.054 16.9203 108.226 16.947L108.228 19.1167Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M118.509 22.782C118.567 22.5015 118.594 22.158 118.594 21.7505C118.594 20.4736 118.287 19.3984 117.674 18.5311C116.902 17.4366 115.763 16.8894 114.26 16.8894C112.729 16.8894 111.512 17.4366 110.612 18.5311C109.752 19.5562 109.323 20.8416 109.323 22.3841C109.323 23.9554 109.785 25.2099 110.707 26.1433C111.631 27.0756 112.901 27.5429 114.518 27.5429C115.863 27.5429 117.029 27.3327 118.016 26.9103L117.653 25.3326C116.808 25.6558 115.869 25.8158 114.839 25.8158C113.909 25.8158 113.151 25.5769 112.565 25.1011C111.919 24.5677 111.582 23.7933 111.556 22.782H118.509ZM115.934 19.4122C116.248 19.904 116.4 20.4854 116.384 21.1606L111.557 21.1585C111.628 20.4726 111.857 19.8816 112.243 19.3898C112.713 18.7711 113.33 18.4628 114.088 18.4628C114.915 18.4628 115.533 18.7786 115.934 19.4122Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.8767 7.79225H39.0899L36.7906 0.935059H35.3787L33.0913 7.79225H34.2719L34.9051 5.77839H37.2131L37.8767 7.79225ZM36.4127 3.14286L37.0133 4.93343H35.105L35.6947 3.14286C35.8387 2.62603 35.9388 2.22585 36.0113 1.93607C36.0186 1.90668 36.0257 1.87843 36.0325 1.85131H36.0542C36.2334 2.53273 36.3497 2.9594 36.4127 3.14286Z\" fill=\"white\"></path><path d=\"M44.8094 2.84827L42.8696 7.79224H41.7629L39.886 2.84827H41.109L41.9844 5.46283C42.1321 5.89998 42.2581 6.31722 42.3526 6.7135H42.3841C42.4688 6.35811 42.5948 5.94087 42.7523 5.46283L43.6169 2.84827H44.8094Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.8541 7.22299L48.9388 7.79224L49.9631 7.79329C49.9109 7.49871 49.8892 7.11187 49.8892 6.61286V4.79189C49.8892 3.428 49.2136 2.74658 47.8755 2.74658C47.1793 2.74658 46.5896 2.88916 46.1149 3.1743L46.3463 3.89661C46.7351 3.65235 47.1782 3.52969 47.6844 3.52969C48.3904 3.52969 48.7488 3.85573 48.7488 4.50675V4.59795C46.8513 4.59795 45.7554 5.22905 45.7554 6.44932C45.7554 7.2838 46.4093 7.90442 47.326 7.90442C47.9689 7.90442 48.4751 7.68112 48.8226 7.22299H48.8541ZM46.8828 6.32666C46.8828 5.62532 47.5149 5.32969 48.7803 5.32969V6.09288C48.7803 6.67262 48.2426 7.09929 47.6627 7.09929C47.2097 7.09929 46.8828 6.84559 46.8828 6.32666Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.7498 1.37221C51.7498 1.74856 52.0452 2.03371 52.4242 2.03371C52.8467 2.03371 53.1411 1.76953 53.1411 1.37221C53.1519 0.995857 52.8359 0.721191 52.446 0.721191C52.055 0.721191 51.7498 0.995857 51.7498 1.37221ZM51.8768 2.84827V7.79225H53.0151V2.84827H51.8768Z\" fill=\"white\"></path><path d=\"M56.1757 7.79229H55.0374V0.579712H56.1757V7.79229Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.9285 7.22307L61.0132 7.79232H62.0353C61.9853 7.49773 61.9625 7.11089 61.9625 6.61188V4.79092C61.9625 3.42703 61.2869 2.74561 59.9489 2.74561C59.2526 2.74561 58.6629 2.88818 58.1883 3.17333L58.4207 3.89668C58.8095 3.65242 59.2526 3.52976 59.7588 3.52976C60.4648 3.52976 60.8232 3.8558 60.8232 4.50682V4.59802C58.9257 4.59802 57.8298 5.22912 57.8298 6.44939C57.8298 7.28387 58.4837 7.90449 59.4004 7.90449C60.0433 7.90449 60.5495 7.68119 60.897 7.22307H60.9285ZM58.9572 6.32674C58.9572 5.6254 59.5893 5.32976 60.8547 5.32976V6.09296C60.8547 6.67269 60.317 7.09936 59.7371 7.09936C59.2841 7.09936 58.9572 6.84566 58.9572 6.32674Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.9635 7.0291C65.311 7.60883 65.8476 7.90446 66.5742 7.90446C67.8808 7.90446 68.8409 6.78484 68.8409 5.25007C68.8409 3.76562 67.9763 2.74768 66.7425 2.74768C65.9931 2.74768 65.4468 3.02234 65.109 3.57167H65.0873V0.579712H63.9479V6.45985C63.9479 6.94733 63.9371 7.39602 63.9056 7.79229H64.8755L64.9406 7.0291H64.9635ZM65.0884 4.92299C65.0884 4.15979 65.6879 3.61046 66.3428 3.61046C67.1542 3.61046 67.682 4.29293 67.6831 5.2899C67.6831 6.35816 67.1759 7.0291 66.3233 7.0291C65.6271 7.0291 65.0884 6.46929 65.0884 5.78787V4.92299Z\" fill=\"white\"></path><path d=\"M71.6615 7.79229H70.5244V0.579712H71.6615V7.79229Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.441 5.58455H77.8579C77.8905 5.45246 77.9002 5.27948 77.8959 5.08658C77.8959 3.67237 77.0726 2.73621 75.766 2.73621C74.3139 2.73621 73.3429 3.87575 73.3429 5.39165C73.3429 6.9065 74.2911 7.88356 75.8942 7.88356C76.5578 7.88356 77.1269 7.78187 77.6113 7.57849L77.4343 6.8153C77.0238 6.96731 76.56 7.04908 76.0538 7.04908C75.1046 7.04908 74.4638 6.52071 74.441 5.58455ZM75.6857 3.4994C76.4134 3.4994 76.8141 4.03824 76.8141 4.80144H74.441C74.517 4.04873 75.0318 3.4994 75.6857 3.4994Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M82.2903 5.36114C82.2903 6.82567 83.2602 7.90442 84.7569 7.90442C86.2861 7.90442 87.3092 6.82567 87.3092 5.28042C87.3092 3.77396 86.3165 2.74658 84.8427 2.74658C83.2808 2.74658 82.2903 3.83476 82.2903 5.36114ZM83.4513 5.32969C83.4513 4.29184 83.9781 3.54961 84.8003 3.54961C85.6008 3.54961 86.1275 4.30232 86.1265 5.30873C86.1265 6.29626 85.5899 7.08986 84.7894 7.08986C83.989 7.08986 83.4513 6.34763 83.4513 5.32969Z\" fill=\"white\"></path><path d=\"M93.4284 7.79232H92.2912V4.95341C92.2912 4.07909 91.9437 3.64089 91.2583 3.64089C90.5838 3.64089 90.119 4.2007 90.119 4.85172V7.79232H88.9818V4.26151C88.9818 3.82435 88.9699 3.35574 88.9395 2.84729H89.9409L89.9941 3.61049H90.0256C90.3297 3.08212 90.9531 2.74561 91.6482 2.74561C92.7224 2.74561 93.4284 3.5392 93.4284 4.83075V7.79232Z\" fill=\"white\"></path><path d=\"M100.876 3.67237H99.6237V6.07307C99.6237 6.68425 99.8441 6.98932 100.286 6.98932C100.487 6.98932 100.657 6.96835 100.792 6.93795L100.824 7.77243C100.602 7.8542 100.306 7.89509 99.9397 7.89509C99.0426 7.89509 98.5071 7.41704 98.5071 6.16533V3.67237H97.7599V2.84838H98.5071V1.94261L99.6237 1.61658V2.84733H100.876V3.67237Z\" fill=\"white\"></path><path d=\"M106.904 7.79229H105.765V4.97435C105.765 4.08955 105.417 3.64191 104.732 3.64191C104.142 3.64191 103.595 4.02875 103.595 4.81186V7.79229H102.455V0.579712H103.595V3.54966H103.616C103.975 3.01081 104.492 2.74558 105.155 2.74558C106.24 2.74558 106.904 3.55909 106.904 4.8517V7.79229Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M109.304 5.58455H112.72C112.752 5.45246 112.762 5.27948 112.758 5.08658C112.758 3.67237 111.935 2.73621 110.628 2.73621C109.176 2.73621 108.205 3.87575 108.205 5.39165C108.205 6.9065 109.153 7.88356 110.756 7.88356C111.42 7.88356 111.99 7.78187 112.475 7.57849L112.296 6.8153C111.886 6.96731 111.423 7.04908 110.916 7.04908C109.967 7.04908 109.326 6.52071 109.304 5.58455ZM110.549 3.4994C111.277 3.4994 111.676 4.03824 111.676 4.80144H109.304C109.379 4.04873 109.894 3.4994 110.549 3.4994Z\" fill=\"white\"></path></svg>\n                </Link>\n                <Link className=\"left-link\" href=\"\">\n                <svg className=\"onelink\" width=\"28\" height=\"30\" viewBox=\"0 0 16 16\" fill=\"currentColor\"><path d=\"M8 0C3.58853 0 0 3.58887 0 8C0 12.4111 3.58853 16 8 16C12.4115 16 16 12.4111 16 8C16 3.58887 12.4115 0 8 0ZM7.33334 11.6667C7.33334 12.2181 6.88478 12.6667 6.33334 12.6667H4.33334C3.78191 12.6667 3.33334 12.2181 3.33334 11.6667V9.66666C3.33334 9.11522 3.78191 8.66666 4.33334 8.66666H6.33334C6.88478 8.66666 7.33334 9.11522 7.33334 9.66666V11.6667ZM7.33334 6.33334C7.33334 6.88478 6.88478 7.33334 6.33334 7.33334H4.33334C3.78191 7.33334 3.33334 6.88478 3.33334 6.33334V4.33334C3.33334 3.78191 3.78191 3.33334 4.33334 3.33334H6.33334C6.88478 3.33334 7.33334 3.78191 7.33334 4.33334V6.33334ZM12.6667 11.6667C12.6667 12.2181 12.2181 12.6667 11.6667 12.6667H9.66666C9.11522 12.6667 8.66666 12.2181 8.66666 11.6667V9.66666C8.66666 9.11522 9.11522 8.66666 9.66666 8.66666H11.6667C12.2181 8.66666 12.6667 9.11522 12.6667 9.66666V11.6667ZM12.6667 6.33334C12.6667 6.88478 12.2181 7.33334 11.6667 7.33334H9.66666C9.11522 7.33334 8.66666 6.88478 8.66666 6.33334V4.33334C8.66666 3.78191 9.11522 3.33334 9.66666 3.33334H11.6667C12.2181 3.33334 12.6667 3.78191 12.6667 4.33334V6.33334Z\"></path></svg>\n                <span className=\"svg-text1\">Our</span>\n                <br/>\n                <span className=\"svg-text1 last\">annexeks</span>\n                </Link>\n            </div>\n            <div className=\"footer-middle\">\n                <div className=\"middle-left\">\n                    <Link className=\"btr-link\">\n                    <svg width=\"14\" height=\"16\" viewBox=\"0 0 14 16\" fill=\"currentColor\" class=\"svg-fill\"><path d=\"M11.4397 10.1649C10.8168 11.0205 9.80769 11.5777 8.67077 11.5777H7.07551C6.52443 11.5777 6.05514 11.2279 5.87743 10.7382C5.65808 10.6728 5.44298 10.5878 5.23307 10.4835C4.78856 10.2627 4.38493 9.96344 4.02963 9.59277C1.72492 10.0991 0 12.1527 0 14.6095V14.9306C0 15.3721 0.357871 15.7299 0.799308 15.7299H13.2007C13.6421 15.7299 14 15.3721 14 14.9306V14.6095C14 12.7116 12.9705 11.0543 11.4397 10.1649Z\"></path><path d=\"M3.1801 7.9451C3.52364 7.9451 3.82265 7.7547 3.97756 7.47372C3.98164 7.48484 3.98578 7.4959 3.98995 7.50695C3.99118 7.51027 3.99242 7.51359 3.99365 7.51691C4.35706 8.47349 5.06418 9.2754 5.99661 9.62578C6.22211 9.26746 6.62088 9.02915 7.07556 9.02915H8.67082C8.82994 9.02915 8.97805 8.98426 9.10788 8.91168C9.32592 8.78975 9.52201 8.48044 9.62326 8.31649C9.78529 8.05413 9.91084 7.77623 10.0222 7.47324C10.0847 7.58685 10.1707 7.68568 10.2738 7.76312V8.15429C10.2738 9.03819 9.55472 9.75732 8.67078 9.75732H7.07552C6.77394 9.75732 6.52944 10.0018 6.52944 10.3034C6.52944 10.605 6.77394 10.8495 7.07552 10.8495H8.67078C10.1569 10.8495 11.366 9.64042 11.366 8.15429V7.76312C11.587 7.59705 11.73 7.33274 11.73 7.03499V5.38836V4.75694C11.73 4.45307 11.581 4.1842 11.3522 4.01888C11.1747 1.77314 9.29058 0 7 0C4.70939 0 2.82528 1.77314 2.64781 4.01885C2.41899 4.18417 2.26996 4.45307 2.26996 4.7569V7.03492C2.26996 7.53901 2.67947 7.9451 3.1801 7.9451ZM7 1.0922C8.69566 1.0922 10.0943 2.38803 10.2577 4.04144C10.1504 4.12586 10.0625 4.23375 10.0019 4.35756C9.48666 3.0132 8.33639 2.07721 6.99997 2.07721C5.63473 2.07721 4.50291 3.04536 4.00001 4.35219C3.99933 4.35397 3.99868 4.35578 3.99799 4.35759C3.93742 4.23379 3.84951 4.12589 3.7422 4.04147C3.90577 2.38803 5.30434 1.0922 7 1.0922Z\"></path></svg>\n                    <p className=\"svg-link\">@FirstMoviesupport</p>\n                    </Link>\n                    <Link className=\"btr-link\">\n                    <svg width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\" class=\"svg-fill\"><path d=\"M4.18805 3.97259H5.49176V9.71853H4.18805V3.97259ZM8.37526 3.92966C7.58242 3.92966 7.0202 3.981 6.61873 4.05002V9.71853H7.90646V7.66406C8.02681 7.68089 8.17915 7.69015 8.35001 7.69015C9.11675 7.69015 9.77324 7.50162 10.2168 7.08332C10.5577 6.75845 10.7453 6.28207 10.7453 5.71901C10.7453 5.15679 10.4971 4.68041 10.1318 4.39004C9.74799 4.08284 9.17566 3.92966 8.37526 3.92966ZM8.33991 6.69111C8.15306 6.69111 8.01587 6.6827 7.90561 6.65661V4.96152C7.99904 4.93627 8.17831 4.91018 8.44343 4.91018C9.09066 4.91018 9.45762 5.2258 9.45762 5.75352C9.45762 6.34183 9.0309 6.69111 8.33991 6.69111ZM7 0C3.13346 0 0 3.13346 0 6.99916C0 10.8649 7 17.0299 7 17.0299C7 17.0299 14 10.8657 14 7C14 3.1343 10.8665 0 7 0ZM7.01767 11.2554C4.45064 11.2554 2.37009 9.17398 2.37009 6.60611C2.37009 4.03908 4.45148 1.95852 7.01767 1.95852C9.58555 1.95852 11.6653 4.03992 11.6653 6.60611C11.6653 9.17314 9.58471 11.2554 7.01767 11.2554Z\" fill=\"white\"></path></svg>\n                    <p className=\"svg-link\">Your IP:92.38.53.174</p>\n                    </Link>\n                </div>\n                <div className=\"middle-right\">\n                    <Link className=\"btr-link\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"svg-fill\"><path d=\"M13.656 2.34229C10.5313 -0.781425 5.46601 -0.780675 2.34229 2.34401C-0.781425 5.4687 -0.780675 10.534 2.34401 13.6577C5.4687 16.7814 10.534 16.7807 13.6577 13.656C15.1579 12.1553 16.0005 10.1202 16 7.99829C15.9996 5.87673 15.1564 3.84223 13.656 2.34229ZM12.1157 11.1439C12.1154 11.1443 12.115 11.1446 12.1147 11.145V11.1423L11.7093 11.545C11.1851 12.0758 10.4216 12.2942 9.69597 12.121C8.96488 11.9253 8.26988 11.6138 7.63732 11.1983C7.04963 10.8227 6.50501 10.3837 6.01332 9.88897C5.56091 9.43988 5.15448 8.94675 4.79998 8.41697C4.41223 7.84691 4.10532 7.22591 3.88798 6.57163C3.63882 5.80301 3.84529 4.9596 4.42132 4.39298L4.89598 3.91832C5.02795 3.78576 5.24238 3.78529 5.37491 3.91726C5.37526 3.9176 5.37563 3.91795 5.37598 3.91832L6.87463 5.41698C7.00719 5.54895 7.00766 5.76338 6.87569 5.89591C6.87535 5.89626 6.87501 5.8966 6.87463 5.89698L5.99463 6.77698C5.74213 7.02673 5.71038 7.4236 5.91998 7.71032C6.23826 8.14713 6.59048 8.55816 6.97332 8.93966C7.40016 9.36835 7.86419 9.75832 8.35997 10.105C8.64644 10.3048 9.03482 10.2711 9.28263 10.025L10.1333 9.16101C10.2653 9.02844 10.4797 9.02797 10.6122 9.15994C10.6126 9.16029 10.6129 9.16063 10.6133 9.16101L12.1146 10.665C12.2472 10.7969 12.2477 11.0113 12.1157 11.1439Z\"></path></svg>\n                    <p className=\"svg-link\">1132</p>\n                    </Link>\n                    <Link className=\"btr-link\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"svg-fill\"><path d=\"M13.656 2.34229C10.5313 -0.781425 5.46601 -0.780675 2.34229 2.34401C-0.781425 5.4687 -0.780675 10.534 2.34401 13.6577C5.4687 16.7814 10.534 16.7807 13.6577 13.656C15.1579 12.1553 16.0005 10.1202 16 7.99829C15.9996 5.87673 15.1564 3.84223 13.656 2.34229ZM12.1157 11.1439C12.1154 11.1443 12.115 11.1446 12.1147 11.145V11.1423L11.7093 11.545C11.1851 12.0758 10.4216 12.2942 9.69597 12.121C8.96488 11.9253 8.26988 11.6138 7.63732 11.1983C7.04963 10.8227 6.50501 10.3837 6.01332 9.88897C5.56091 9.43988 5.15448 8.94675 4.79998 8.41697C4.41223 7.84691 4.10532 7.22591 3.88798 6.57163C3.63882 5.80301 3.84529 4.9596 4.42132 4.39298L4.89598 3.91832C5.02795 3.78576 5.24238 3.78529 5.37491 3.91726C5.37526 3.9176 5.37563 3.91795 5.37598 3.91832L6.87463 5.41698C7.00719 5.54895 7.00766 5.76338 6.87569 5.89591C6.87535 5.89626 6.87501 5.8966 6.87463 5.89698L5.99463 6.77698C5.74213 7.02673 5.71038 7.4236 5.91998 7.71032C6.23826 8.14713 6.59048 8.55816 6.97332 8.93966C7.40016 9.36835 7.86419 9.75832 8.35997 10.105C8.64644 10.3048 9.03482 10.2711 9.28263 10.025L10.1333 9.16101C10.2653 9.02844 10.4797 9.02797 10.6122 9.15994C10.6126 9.16029 10.6129 9.16063 10.6133 9.16101L12.1146 10.665C12.2472 10.7969 12.2477 11.0113 12.1157 11.1439Z\"></path></svg>\n                    <p className=\"svg-link\">(+998) 99 733 33 41</p>\n                    </Link>\n                </div>\n            </div>\n            <div className=\"footer-right\">\n                <div className=\"right-top\">\n                    <Link>\n                    <svg className=\"svg-fill\" enable-background=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" fill=\"currentColor\" width=\"18\" height=\"18\"><path d=\"m512 256c0-141.4-114.6-256-256-256s-256 114.6-256 256 114.6 256 256 256c1.5 0 3 0 4.5-.1v-199.2h-55v-64.1h55v-47.2c0-54.7 33.4-84.5 82.2-84.5 23.4 0 43.5 1.7 49.3 2.5v57.2h-33.6c-26.5 0-31.7 12.6-31.7 31.1v40.8h63.5l-8.3 64.1h-55.2v189.5c107-30.7 185.3-129.2 185.3-246.1z\"></path></svg>\n                    </Link>\n                    <Link>\n                        <svg className=\"svg-fill\" viewBox=\"0 0 512 512\" fill=\"currentColor\" width=\"18\" height=\"18\"><path d=\"m305 256c0 27.0625-21.9375 49-49 49s-49-21.9375-49-49 21.9375-49 49-49 49 21.9375 49 49zm0 0\"></path><path d=\"m370.59375 169.304688c-2.355469-6.382813-6.113281-12.160157-10.996094-16.902344-4.742187-4.882813-10.515625-8.640625-16.902344-10.996094-5.179687-2.011719-12.960937-4.40625-27.292968-5.058594-15.503906-.707031-20.152344-.859375-59.402344-.859375-39.253906 0-43.902344.148438-59.402344.855469-14.332031.65625-22.117187 3.050781-27.292968 5.0625-6.386719 2.355469-12.164063 6.113281-16.902344 10.996094-4.882813 4.742187-8.640625 10.515625-11 16.902344-2.011719 5.179687-4.40625 12.964843-5.058594 27.296874-.707031 15.5-.859375 20.148438-.859375 59.402344 0 39.25.152344 43.898438.859375 59.402344.652344 14.332031 3.046875 22.113281 5.058594 27.292969 2.359375 6.386719 6.113281 12.160156 10.996094 16.902343 4.742187 4.882813 10.515624 8.640626 16.902343 10.996094 5.179688 2.015625 12.964844 4.410156 27.296875 5.0625 15.5.707032 20.144532.855469 59.398438.855469 39.257812 0 43.90625-.148437 59.402344-.855469 14.332031-.652344 22.117187-3.046875 27.296874-5.0625 12.820313-4.945312 22.953126-15.078125 27.898438-27.898437 2.011719-5.179688 4.40625-12.960938 5.0625-27.292969.707031-15.503906.855469-20.152344.855469-59.402344 0-39.253906-.148438-43.902344-.855469-59.402344-.652344-14.332031-3.046875-22.117187-5.0625-27.296874zm-114.59375 162.179687c-41.691406 0-75.488281-33.792969-75.488281-75.484375s33.796875-75.484375 75.488281-75.484375c41.6875 0 75.484375 33.792969 75.484375 75.484375s-33.796875 75.484375-75.484375 75.484375zm78.46875-136.3125c-9.742188 0-17.640625-7.898437-17.640625-17.640625s7.898437-17.640625 17.640625-17.640625 17.640625 7.898437 17.640625 17.640625c-.003906 9.742188-7.898437 17.640625-17.640625 17.640625zm0 0\"></path><path d=\"m256 0c-141.363281 0-256 114.636719-256 256s114.636719 256 256 256 256-114.636719 256-256-114.636719-256-256-256zm146.113281 316.605469c-.710937 15.648437-3.199219 26.332031-6.832031 35.683593-7.636719 19.746094-23.246094 35.355469-42.992188 42.992188-9.347656 3.632812-20.035156 6.117188-35.679687 6.832031-15.675781.714844-20.683594.886719-60.605469.886719-39.925781 0-44.929687-.171875-60.609375-.886719-15.644531-.714843-26.332031-3.199219-35.679687-6.832031-9.8125-3.691406-18.695313-9.476562-26.039063-16.957031-7.476562-7.339844-13.261719-16.226563-16.953125-26.035157-3.632812-9.347656-6.121094-20.035156-6.832031-35.679687-.722656-15.679687-.890625-20.6875-.890625-60.609375s.167969-44.929688.886719-60.605469c.710937-15.648437 3.195312-26.332031 6.828125-35.683593 3.691406-9.808594 9.480468-18.695313 16.960937-26.035157 7.339844-7.480469 16.226563-13.265625 26.035157-16.957031 9.351562-3.632812 20.035156-6.117188 35.683593-6.832031 15.675781-.714844 20.683594-.886719 60.605469-.886719s44.929688.171875 60.605469.890625c15.648437.710937 26.332031 3.195313 35.683593 6.824219 9.808594 3.691406 18.695313 9.480468 26.039063 16.960937 7.476563 7.34375 13.265625 16.226563 16.953125 26.035157 3.636719 9.351562 6.121094 20.035156 6.835938 35.683593.714843 15.675781.882812 20.683594.882812 60.605469s-.167969 44.929688-.886719 60.605469zm0 0\"></path></svg>\n                    </Link>\n                    <Link>\n                    <svg className=\"svg-fill\" enable-background=\"new 0 0 24 24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"18\" height=\"18\"><path d=\"m12 24c6.629 0 12-5.371 12-12s-5.371-12-12-12-12 5.371-12 12 5.371 12 12 12zm-6.509-12.26 11.57-4.461c.537-.194 1.006.131.832.943l.001-.001-1.97 9.281c-.146.658-.537.818-1.084.508l-3-2.211-1.447 1.394c-.16.16-.295.295-.605.295l.213-3.053 5.56-5.023c.242-.213-.054-.333-.373-.121l-6.871 4.326-2.962-.924c-.643-.204-.657-.643.136-.953z\"></path></svg>\n                    </Link>\n                </div>\n                <div className=\"right-bottom\">\n                    <p className=\"cayt-name\">© 2011-2021.<span className=\"sayt-span\">NajotTalim</span> </p>\n                </div>\n            </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Footer;","import { Link }  from 'react-router-dom';\nimport './highscore.scss'\n\nconst highscorecard = ({imglink, relisedate, title, rating, id}) => {\n    return ( \n        <div>\n\n        <Link to={`/movie/${id}`} className=\"movie-card\">\n            <span className=\"card-rating\">{rating}</span>\n            <div className=\"card-img-holder\">\n            <img src={imglink} alt=\"\" className=\"movie-img\"/>\n            </div>\n            <h2 className=\"card-title\">{title}</h2>\n            <h5 className=\"card-date\">{relisedate}</h5>\n\n        </Link>\n        </div>\n     );\n}\n \nexport default highscorecard;","// const Highscore = () => {\n//     return ( \n//         <div>\n//             <h1>highscore</h1>\n//         </div>\n//      );\n// }\n \n// export default Highscore;\n\n\n\nimport axios from 'axios';\nimport { useState, useEffect} from 'react'\nimport Highscorecard from '../components/highscore-card/highscorecard'\nimport './pages.scss'\n\n\n\n\nconst Highscore = () => {\n\n  const [ movieList, setMovieList ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n\n  useEffect(() => {\n  axios.get('https://api.themoviedb.org/3/movie/top_rated', {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setMovieList ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setMovieList ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, []);\n  \n  \n\n    return ( \n        <div className=\"container\">\n          {\n            movieList.isFetched ? (\n              <div className=\"movie-list\">\n                {\n                  movieList.data.results.map((movie, index) => (\n                    <Highscorecard\n                      title={movie.title}\n                      id={movie.id}\n                      key={index}\n                      rating={movie.vote_average}\n                      relisedate={movie.release_date}\n                      imglink={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                    />\n                  ))\n                }\n              </div>\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n          }\n\n          {/* <h1>high</h1> */}\n        </div>\n     );\n}\n\n\n \nexport default Highscore;","export default __webpack_public_path__ + \"static/media/play.97e551d4.webp\";","import { Link }  from 'react-router-dom';\nimport './moviacard.scss'\nimport play from '../../images/icon/play.webp'\n\nconst Movicard = ({imglink, relisedate, title, rating, type, id, page}) => {\n    return ( \n        <Link to={`/${type}/${id}`} className=\"movie-card\">\n            <span className=\"card-rating\">{rating}</span>\n            <div className=\"card-img-holder\">\n            <img src={imglink} alt=\"\" className=\"movie-img\"/>\n            </div>\n            <h2 className=\"card-title\">{title}</h2>\n            <h5 className=\"card-date\">{relisedate}</h5>\n            <img src={play} alt=\"icon\" className=\"plays\"/>\n            <div className=\"shadov\"></div>\n\n        </Link>\n     );\n}\n \nexport default Movicard;","import MovieCard from './moviacard' \nexport default MovieCard;","import BigCaro from './bigCarousel'\n\nexport default BigCaro;","import { Link } from 'react-router-dom'\nimport './bigcarousel.scss'\n\nconst BigCaro = ({img, id, type}) => {\n    return ( \n        <Link to={`/${type}/${id}`} className=\"Big-caro\">\n            <img className=\"bigcinema\" src={img} alt=\"cinema\"/>\n        </Link>\n     );\n}\n \nexport default BigCaro;","import HighScore from './Highscore'\nimport Highscorecard from '../components/highscore-card'\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport MovieCard from '../components/movia-card'\nimport BigCaro from '../components/big-carousel'\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react'\n\n\n\nconst Home = () => {\n\n  const [tvList, setTvList] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n    axios.get('https://api.themoviedb.org/3/tv/popular', {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n      .then(function (response) {\n        setTvList({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setTvList({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, []);\n\n  const [OnlineTv, setOnlineTv] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n    axios.get('https://api.themoviedb.org/3/tv/airing_today', {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n      .then(function (response) {\n        setOnlineTv({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setOnlineTv({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, []);\n\n\n  const [movieList, setMovieList] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n\n  useEffect(() => {\n    axios.get('https://api.themoviedb.org/3/movie/top_rated', {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n\n\n      .then(function (response) {\n        setMovieList({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setMovieList({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, []);\n\n\n\n  const [nowplaying, setNowPlaying] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n\n  useEffect(() => {\n    axios.get('https://api.themoviedb.org/3/movie/now_playing', {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n\n\n      .then(function (response) {\n        setNowPlaying({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setNowPlaying({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, []);\n\n\n\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true\n  };\n\n  const tvCaro = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 3\n  };\n\n  const onlineCaro = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 3\n  };\n\n  const nowPlaying = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 3\n  };\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"tv-block\">\n        <Slider {...settings} className=\"big-carousel\">\n          {\n            movieList.isFetched ? (\n              movieList.data.results.map((movie, index) => (\n                <BigCaro\n                  // title={movie.title}\n                  id={movie.id}\n                  key={index}\n                  type=\"movie\"\n                  // rating={movie.vote_average}\n                  // relisedate={movie.release_date}\n                  img={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                />\n              ))\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n\n          }\n        </Slider>\n      </div>\n\n      <div className=\"tv-block container\">\n        <h1 className=\"tv-text\">TV series</h1>\n        <Slider {...tvCaro}>\n          {\n            tvList.isFetched ? (\n              tvList.data.results.map((movie, index) => (\n                <MovieCard\n                  title={movie.original_name}\n                  id={movie.id}\n                  key={index}\n                  rating={movie.vote_average}\n                  type=\"tv-show\"\n                  relisedate={movie.first_air_date}\n                  imglink={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                />\n              ))\n            ) : (\n              <></>\n            )\n          }\n        </Slider>\n      </div>\n\n      <div className=\"tv container\">\n        <h1 className=\"tv-text\">TV Airing Today</h1>\n        <Slider {...onlineCaro}>\n          {\n            OnlineTv.isFetched ? (\n              OnlineTv.data.results.map((movie, index) => (\n                <MovieCard\n                  title={movie.original_name}\n                  id={movie.id}\n                  key={index}\n                  rating={movie.vote_average}\n                  type=\"tv-show\"\n                  relisedate={movie.first_air_date}\n                  imglink={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                />\n              ))\n            ) : (\n              <></>\n            )\n          }\n        </Slider>\n      </div>\n\n\n      <h1 className=\"tv-text container\">\n        Now Playing\n        </h1>\n      <div className=\"tv-block container\">\n        <Slider {...nowPlaying}>\n          {\n            nowplaying.isFetched ? (\n              nowplaying.data.results.map((movie, index) => (\n                <MovieCard\n                  title={movie.title}\n                  id={movie.id}\n                  key={index}\n                  type=\"movie\"\n                  rating={movie.vote_average}\n                  relisedate={movie.release_date}\n                  imglink={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                />\n              ))\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n\n          }\n        </Slider>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Home;","import axios from 'axios';\nimport { useState, useEffect} from 'react'\nimport MovieCard from '../components/movia-card/moviacard'\nimport './pages.scss'\n\n\n\n\nconst Movies = () => {\n\n  const [ movieList, setMovieList ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n  axios.get('https://api.themoviedb.org/3/movie/popular', {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setMovieList ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setMovieList ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, []);\n  \n  \n\n    return ( \n        <div className=\"container\">\n          {\n            movieList.isFetched ? (\n              <div className=\"movie-list\">\n                {\n                  movieList.data.results.map((movie, index) => (\n                    <MovieCard\n                      title={movie.title}\n                      id={movie.id}\n                      type=\"movie\"\n                      key={index}\n                      rating={movie.vote_average}\n                      relisedate={movie.release_date}\n                      imglink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    />\n                  ))\n                }\n              </div>\n            ) : (\n              <div class=\"spinner\"></div>\n\n            )\n          }\n        </div>\n     );\n}\n\n\n \nexport default Movies;","import Actors from './actors'\n\nexport default Actors;","import FilmInfo from './film-info'\nexport default FilmInfo;","import './actors.scss'\nimport { Link }  from 'react-router-dom';\n\nconst Actors = ({images, name, id}) => {\n    return ( \n        <Link to={`/person/${id}`} className=\"actors-card\">\n            <div className=\"actors\">\n                \n                <img src={images} alt=\"rasm\" className=\"actor-img\"/>\n                <h3 className=\"actor-name\">{name}</h3>\n            </div>\n\n        </Link>\n     );\n}\n \nexport default Actors;","import axios from 'axios';\nimport { useState, useEffect } from 'react'\nimport FilmInfo from '../components/film-info-card'\nimport MovieCard from '../components/movia-card'\nimport Actors from '../components/actors-card'\nimport Helmet from 'react-helmet'\n\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\n\n\nconst SingleMovie = ({ match }) => {\n\n  const respo = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 3\n  };\n\n  const [movieInfo, setMovieInfo] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}`, {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n\n\n      .then(function (response) {\n        setMovieInfo({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setMovieInfo({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, [match.params.id]);\n\n\n\n  const [actorInfo, setActorInfo] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/credits`, {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n\n\n      .then(function (response) {\n        setActorInfo({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setActorInfo({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, [match.params.id]);\n\n\n  const [simleFilm, setSimleFilm] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/recommendations`, {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n\n\n      .then(function (response) {\n        setSimleFilm({\n          isFetched: true,\n          data: response.data,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setSimleFilm({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, [match.params.id]);\n\n  const [singleVideo, setSingleVideo] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n\n\n\n  console.log(movieInfo.data)\n\n  return (\n    <>\n\n      <div className=\"container single-list\">\n        <div className=\"tope\">\n\n          {\n            movieInfo.isFetched && actorInfo.isFetched ? (\n\n              <div className=\"block\">\n                <div className=\"film-information\">\n                  <div className=\"images\">\n                    <img src={`https://image.tmdb.org/t/p/original${movieInfo.data.poster_path}`} alt=\"film\" className=\"film-img\" />\n                  </div>\n                  <div className=\"right-div\">\n                    <h1 className=\"film-name\">{movieInfo.data.title}</h1>\n                    {/* <h2 className=\"film-conpany\">Conpany: <span className=\"spane\">{movieInfo.data.production_companies[0].name}</span></h2> */}\n                    <Helmet>\n                      <title>{movieInfo.data.title}</title>\n                      <meta charSet=\"utf-8\" />\n                      <link rel=\"icon\"\n                        type=\"image/png\" href=\"../images/icon/logotip.png\" />\n                    </Helmet>\n                    <h2 className=\"film-popularty\">Year: <span className=\"spane\">{movieInfo.data.release_date}</span></h2>\n                    <p className=\"film-title\">{movieInfo.data.overview}</p>\n                    <h3 className=\"actor-block\" >Actors: {actorInfo.data.cast.map(item => (\n                      <p className=\"actor-name\">{item.name},</p>\n                    ))}</h3>\n                    <h3 className=\"actor-block two-block\" >Producer: {actorInfo.data.crew.map(item => (<>\n                      {item.job == 'Producer' ? (<p className=\"actor-name\">{item.name},</p>) : (null)}</>\n                    ))}</h3>\n                  </div>\n                </div>\n\n\n                {/* <h1 className=\"actor-item\">Actors</h1> */}\n                <div className=\"actor-list\">\n                    <Helmet>\n                      <title>actor-list</title>\n                      <meta charSet=\"utf-8\" />\n                      <link rel=\"icon\"\n                        type=\"image/png\" href=\"../images/icon/logotip.png\" />\n                    </Helmet>\n                  {\n                    actorInfo.data.cast.map((movie, index) => (\n                      \n                      <Actors\n                        id={movie.id}\n                        \n                        images={\n                          movie.profile_path !== null ? (\n                            `https://image.tmdb.org/t/p/original${movie.profile_path}`\n                          ) : (`https://image.tmdb.org/t/p/original${movie.profile_path}`)\n                        }\n                        title={movie.name}\n                        key={index}\n                        name={movie.name}\n                      />\n                    ))\n                  }\n                </div>\n              </div>\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n          }\n        </div>\n\n\n\n        <div className=\"recom-block\">\n          <h2 className=\"rec-text\">Recommendations</h2>\n          <Slider {...respo}>\n            {\n              simleFilm.isFetched ? (\n\n                simleFilm.data.results.map((movie, index) => (\n\n                  <MovieCard\n                    title={movie.title}\n                    id={movie.id}\n                    type=\"movie\"\n                    key={index}\n                    rating={movie.vote_average}\n                    relisedate={movie.release_date}\n                    imglink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n\n                  />\n\n                ))\n\n              ) : (\n                <></>\n              )\n            }\n          </Slider>\n\n\n\n\n        </div>\n\n      </div>\n\n    </>\n  );\n}\n\nexport default SingleMovie;","\n\n\nimport axios from 'axios';\nimport { useState, useEffect} from 'react'\nimport MovieCard from '../components/movia-card'\nimport './pages.scss'\n\n\n\n\nconst TvShovs = ({match}) => {\n\n  const [ simleTv, setSimleTv ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n\n  useEffect(() => {\n  axios.get(`https://api.themoviedb.org/3/tv/${match.params.id}/recommendations`, {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setSimleTv ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setSimleTv ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, [match.params.id]);\n\n  const [ movieList, setMovieList ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n  axios.get('https://api.themoviedb.org/3/tv/popular', {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n  .then(function (response) {\n    setMovieList ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setMovieList ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, [match.params.id]);\n  \n  \n\n    return ( \n        <div className=\"container\">\n          {\n            movieList.isFetched ? (\n              <div className=\"movie-list\">\n                  {\n                  movieList.data.results.map((movie, index) => (\n                    <MovieCard\n                      title={movie.original_name}\n                      id={movie.id}\n                      key={index}\n                      rating={movie.vote_average}\n                      type=\"tv-show\"\n                      relisedate={movie.first_air_date}\n                      imglink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    />\n                  ))\n                }\n              </div>\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n          }\n          <div className=\"recomen-tv\">\n\n          </div>\n        </div>\n     );\n}\n\n\n \nexport default TvShovs;","import axios from 'axios';\nimport { useState, useEffect} from 'react'\nimport FilmInfo from '../components/film-info-card'\nimport Actors from '../components/actors-card'\nimport MovieCard from '../components/movia-card'\n\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\n\nconst SingleSHov = ({ match }) => {\n\n  const tvSlide = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow:4,\n    slidesToScroll: 3\n  };\n\n  const [ movieInfo, setMovieInfo ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n  axios.get(`https://api.themoviedb.org/3/tv/${match.params.id}`, {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setMovieInfo ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setMovieInfo ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, [match.params.id]);\n\n  const [ actorInfo, setActorInfo ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n\n  useEffect(() => {\n  axios.get(`https://api.themoviedb.org/3/tv/${match.params.id}/credits`, {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setActorInfo ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  \n  .catch(function (error) {\n    setActorInfo ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, [match.params.id]);\n\n  const [ simleTv, setSimleTv ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n\n  useEffect(() => {\n  axios.get(`https://api.themoviedb.org/3/tv/${match.params.id}/recommendations`, {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setSimleTv ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setSimleTv ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, [match.params.id]);\n\n  console.log(actorInfo);\n\n\n    return ( \n        <div className=\"container single-list\">\n          {\n            movieInfo.isFetched && actorInfo.isFetched ? (\n              \n              <div className=\"tv-shovs\">\n                <div className=\"film-information\">\n                  <div className=\"images\">\n                    <img src={`https://image.tmdb.org/t/p/w500${movieInfo.data.poster_path}`} alt=\"film\" className=\"film-img\"/>\n                  </div>\n                    <div className=\"right-div\">\n                      <h1 className=\"film-name\">{movieInfo.data.name}</h1>\n                      <h2 className=\"film-conpany\">Conpany: <span className=\"spane\">{movieInfo.data.production_companies[0].name}</span></h2>\n                      \n                      <h2 className=\"film-popularty\">last_air_date: <span className=\"spane\">{movieInfo.data.last_air_date}</span></h2>\n                        <p className=\"film-title\">{movieInfo.data.overview}</p>\n                    </div>\n              \n                </div>\n\n                <h1 className=\"actor-item\">Actors</h1>\n              <div className=\"actor-list\">\n                {\n                  actorInfo.data.cast.map((movie, index) => (\n                    <Actors\n                      id={movie.id}\n                      images={`https://image.tmdb.org/t/p/w500${movie.profile_path}`}\n                      key={index}\n                      title={movie.name}\n                    />\n                  ))\n                }\n              </div>\n              </div>\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n          }\n\n              <h2 className=\"rec-text\">recommendations</h2>\n               <div className=\"recom-block\">\n                    <Slider {...tvSlide}>\n                  {\n                    simleTv.isFetched ? (\n                      simleTv.data.results.map((movie, index) => (\n                      <div>\n                      <MovieCard\n                        title={movie.title}\n                        id={movie.id}\n                        type=\"tv-show\"\n                        key={index}\n                        rating={movie.vote_average}\n                        relisedate={movie.release_date}\n                        imglink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                      />\n                      </div>\n                    ))\n                    ) : (\n                      <></>\n                    )\n                  }\n                    </Slider>\n               </div>\n           \n        </div>\n     );\n}\n \nexport default SingleSHov;","\nimport axios from 'axios';\nimport { useState, useEffect} from 'react'\nimport MovieCard from '../components/movia-card/moviacard'\nimport './pages.scss'\n\n\n\n\nconst MovieLatest = () => {\n\n  const [ movieLetset, setMovieLetset ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n  axios.get('https://api.themoviedb.org/3/movie/latest', {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    console.log(response);\n    setMovieLetset ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setMovieLetset ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, []);\n  \n  \nconsole.log(movieLetset);\n    return ( \n      <div className=\"container\">\n      {\n        movieLetset.isFetched ? (\n          <div className=\"movie-list\">\n          <div className=\"film-information\">\n                 <div className=\"images\">\n                 {/* <img src={`https://image.tmdb.org/t/p/w500${}`} alt=\"film\" className=\"film-img\"/> */}\n                 </div>\n                  <div className=\"right-div\">\n                     <h1 className=\"film-name\">{movieLetset.title}</h1>\n                     {/* <h2 className=\"film-conpany\">Conpany: <span className=\"spane\">{movieInfo.data.production_companies[0].name}</span></h2> */}\n                     \n                     <h2 className=\"film-popularty\">Year: <span className=\"spane\">{}</span></h2>\n                      <p className=\"film-title\">{}</p>\n                </div>\n              </div>\n          </div>\n        ) : (\n          <h1>loading...</h1>\n        )\n      }\n    </div>\n     );\n}\n\n\n \nexport default MovieLatest;","import axios from 'axios';\nimport { useState, useEffect} from 'react'\nimport MovieCard from '../components/movia-card/moviacard'\nimport './pages.scss'\n\n\n\n\nconst Movieget = () => {\n\n  const [ Movieget, setMovieList ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n  axios.get('https://api.themoviedb.org/3/movie/upcoming', {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    setMovieList ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    setMovieList ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n  }, []);\n  \n  \n\n    return ( \n        <div className=\"container\">\n          {\n            Movieget.isFetched ? (\n              <div className=\"movie-list\">\n              \n                {\n                  Movieget.data.results.map((movie, index) => (\n                    <MovieCard\n                      title={movie.title}\n                      id={movie.id}\n                      key={index}\n                      type=\"Movie\"\n                      rating={movie.vote_average}\n                      relisedate={movie.release_date}\n                      imglink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    />\n                  ))\n                }\n              </div>\n            ) : (\n              <div class=\"spinner\"></div>\n            )\n          }\n        </div>\n     );\n}\n\n\n \nexport default Movieget;","\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react'\nimport MovieCard from '../components/movia-card/moviacard'\nimport './pages.scss'\nimport { Helmet } from \"react-helmet\";\n\n\n\n\n\nconst PersonMovie = ({ match }) => {\n\n  const [movieList, setMovieList] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n\n  })\n  // console.log(data);\n\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/person/${match.params.id}/movie_credits`, {\n      params: {\n        api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n      }\n    })\n\n\n      .then(function (response) {\n        setMovieList({\n          isFetched: true,\n          data: response.data.cast,\n          error: false\n        })\n      })\n      .catch(function (error) {\n        setMovieList({\n          isFetched: true,\n          data: [],\n          error: error\n        })\n      })\n  }, [match.params.id]);\n\n  console.log(movieList)\n  return (\n\n\n\n\n    <div className=\"container\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Movie app</title>\n        <link rel=\"icon\"\n          type=\"image/png\" href=\"../images/icon/logotip.png\" />\n      </Helmet>\n      {\n        movieList.isFetched ? (\n          <div className=\"movie-list\">\n            {\n              movieList.data.map((movie, index) => (\n                <MovieCard\n                  title={movie.title}\n                  id={movie.id}\n                  key={index}\n                  type=\"movie\"\n                  rating={movie.vote_average}\n                  relisedate={movie.release_date}\n                  imglink={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                />\n              ))\n            }\n          </div>\n        ) : (\n          <div class=\"spinner\"></div>\n        )\n      }\n    </div>\n  );\n}\n\n\n\nexport default PersonMovie;","import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport MovieCard from '../components/movia-card'\n\nconst SearchResults = ({ match }) => {\n\n    const [ movieList, SetMovieList ] = useState({\n    isFetched:false,\n    data:{},\n    error:null\n\n  })\n\nuseEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/search/movie?query=${match.params.searchQuery}`, {\n    params: {\n      api_key: \"6f182a77a9989da5eb89e4e1e8a6b379\"\n    }\n  })\n\n  \n  .then(function (response) {\n    SetMovieList ({\n    isFetched: true,\n    data: response.data,\n    error: false\n    })\n  })\n  .catch(function (error) {\n    SetMovieList ({\n      isFetched:true,\n      data:[],\n      error:error\n      })\n    })\n}, [match.params.searchQuery])\n\n\n    return ( \n        <div className=\"container\">\n          {\n            movieList.isFetched ? (\n              <div className=\"movie-list\">\n                {\n                    movieList.data.results.length > 0 ? (\n                        movieList.data.results.map((movie, index) => (\n                        <MovieCard\n                            title={movie.title}\n                            id={movie.id}\n                            type=\"movie\"\n                            key={index}\n                            rating={movie.vote_average}\n                            relisedate={movie.release_date}\n                            imglink={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                        />\n                  ))\n                    ) : (\n                      <div class=\"spinner\"></div>\n                    )\n                }\n              </div>\n            ) : (\n              <></>\n            )\n          }\n        </div>\n     );\n}\n \nexport default SearchResults;","import './main.scss'\nimport Header from './containers/header-containers'\nimport Footer from './containers/footer-container'\n\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport {\n  Home,\n  TvShovs,\n  Movies,\n  SingleMovie,\n  SingleShov,\n  Highscore,\n  MovieLatest,\n  Movieget,\n  PersonMovie,\n  SearchResults,\n\n} from './page';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n\n        <div className=\"appBlock\">\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/movies\" component={Movies}/>\n          <Route exact path=\"/Movie-Latest\" component={MovieLatest}/>\n          <Route exact path=\"/Movie-get\" component={Movieget}/>\n          <Route exact path=\"/Movie-get/:id\" component={Movieget}/>\n          <Route exact path=\"/High-Score\" component={Highscore}/>\n          <Route exact path=\"/tv-shows\" component={TvShovs}/>\n          <Route exact path=\"/movie/:id\" component={SingleMovie}/>\n          <Route exact path=\"/tv-show/:id\" component={SingleShov}/>\n          <Route exact path=\"/High-Score/:id\" component={SingleShov}/>\n          <Route exact path=\"/person/:id\" component={PersonMovie}/>\n          <Route exact path=\"/search/:searchQuery\" component={SearchResults}/>\n        </Switch>\n        </div>\n\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}